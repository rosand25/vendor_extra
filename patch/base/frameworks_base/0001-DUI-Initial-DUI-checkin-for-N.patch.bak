From b4fd847607ab2e638a628ee7193eeb9513db8345 Mon Sep 17 00:00:00 2001
From: bigrushdog <randall.rushing@gmail.com>
Date: Sat, 15 Oct 2016 15:05:24 +0200
Subject: [PATCH] DUI: Initial DUI checkin for N

Change-Id: I9a30dc91b01a84e5c348e07ad003acc49b86155b
[neo: Adapted for 7.1]
Signed-off-by: Pranav Vashi <neobuddy89@gmail.com>
Signed-off-by: sub77 <sub77@ymail.com>
---
 core/java/android/provider/Settings.java           | 229 +++++++++++++++
 core/java/android/view/IWindowManager.aidl         |   5 +
 core/java/android/view/WindowManagerPolicy.java    |   5 +
 .../com/android/internal/statusbar/IStatusBar.aidl |   1 +
 .../internal/statusbar/IStatusBarService.aidl      |   8 +
 media/java/android/media/IAudioService.aidl        |  11 +
 media/java/android/media/audiofx/Visualizer.java   |  30 ++
 packages/SystemUI/Android.mk                       |   9 +-
 packages/SystemUI/AndroidManifest.xml              |   6 +
 packages/SystemUI/proguard.flags                   |   3 +
 .../res/drawable-hdpi/ic_sysbar_docked.png         | Bin 1254 -> 0 bytes
 .../res/drawable-land-hdpi/ic_sysbar_docked.png    | Bin 1151 -> 0 bytes
 .../res/drawable-land-xhdpi/ic_sysbar_docked.png   | Bin 1402 -> 0 bytes
 .../res/drawable-land-xxhdpi/ic_sysbar_docked.png  | Bin 1643 -> 0 bytes
 .../res/drawable-land-xxxhdpi/ic_sysbar_docked.png | Bin 995 -> 0 bytes
 .../res/drawable-land/ic_sysbar_docked.png         | Bin 907 -> 0 bytes
 .../res/drawable-ldrtl-hdpi/ic_sysbar_back.png     | Bin 1535 -> 0 bytes
 .../res/drawable-ldrtl-mdpi/ic_sysbar_back.png     | Bin 965 -> 0 bytes
 .../res/drawable-ldrtl-xhdpi/ic_sysbar_back.png    | Bin 2084 -> 0 bytes
 .../res/drawable-ldrtl-xxhdpi/ic_sysbar_back.png   | Bin 1358 -> 0 bytes
 .../SystemUI/res/drawable-mdpi/ic_sysbar_back.png  | Bin 1077 -> 0 bytes
 .../res/drawable-mdpi/ic_sysbar_back_ime.png       | Bin 1037 -> 0 bytes
 .../res/drawable-mdpi/ic_sysbar_docked.png         | Bin 972 -> 0 bytes
 .../SystemUI/res/drawable-mdpi/ic_sysbar_home.png  | Bin 1169 -> 0 bytes
 .../SystemUI/res/drawable-mdpi/ic_sysbar_menu.png  | Bin 588 -> 0 bytes
 .../res/drawable-mdpi/ic_sysbar_recent.png         | Bin 703 -> 0 bytes
 .../SystemUI/res/drawable-xhdpi/ic_sysbar_back.png | Bin 1933 -> 0 bytes
 .../res/drawable-xhdpi/ic_sysbar_back_ime.png      | Bin 1864 -> 0 bytes
 .../res/drawable-xhdpi/ic_sysbar_docked.png        | Bin 1346 -> 0 bytes
 .../SystemUI/res/drawable-xhdpi/ic_sysbar_home.png | Bin 2470 -> 0 bytes
 .../SystemUI/res/drawable-xhdpi/ic_sysbar_menu.png | Bin 1243 -> 0 bytes
 .../res/drawable-xhdpi/ic_sysbar_recent.png        | Bin 840 -> 0 bytes
 .../res/drawable-xxhdpi/ic_sysbar_back.png         | Bin 2934 -> 0 bytes
 .../res/drawable-xxhdpi/ic_sysbar_back_ime.png     | Bin 2999 -> 0 bytes
 .../res/drawable-xxhdpi/ic_sysbar_docked.png       | Bin 1608 -> 0 bytes
 .../res/drawable-xxhdpi/ic_sysbar_home.png         | Bin 3748 -> 0 bytes
 .../res/drawable-xxhdpi/ic_sysbar_menu.png         | Bin 847 -> 0 bytes
 .../res/drawable-xxhdpi/ic_sysbar_recent.png       | Bin 1063 -> 0 bytes
 .../res/drawable-xxxhdpi/ic_sysbar_back.png        | Bin 3313 -> 0 bytes
 .../res/drawable-xxxhdpi/ic_sysbar_back_ime.png    | Bin 3419 -> 0 bytes
 .../res/drawable-xxxhdpi/ic_sysbar_docked.png      | Bin 1096 -> 0 bytes
 .../res/drawable-xxxhdpi/ic_sysbar_home.png        | Bin 4428 -> 0 bytes
 .../res/drawable-xxxhdpi/ic_sysbar_recent.png      | Bin 1675 -> 0 bytes
 .../android/systemui/statusbar/BaseStatusBar.java  |   9 +-
 .../android/systemui/statusbar/CommandQueue.java   |  13 +
 .../statusbar/car/CarBatteryController.java        | 276 ------------------
 .../statusbar/car/CarNavigationBarController.java  | 321 ---------------------
 .../statusbar/car/CarNavigationBarView.java        |  75 -----
 .../statusbar/car/CarNavigationButton.java         |  70 -----
 .../systemui/statusbar/car/CarStatusBar.java       | 219 --------------
 .../statusbar/car/FullscreenUserSwitcher.java      |  56 ----
 .../systemui/statusbar/car/UserGridView.java       | 162 -----------
 .../systemui/statusbar/phone/BarTransitions.java   |   3 +
 .../systemui/statusbar/phone/PhoneStatusBar.java   | 223 +++++++-------
 .../phone/StatusBarKeyguardViewManager.java        |   4 +-
 services/core/Android.mk                           |   2 +-
 .../android/server/am/ActivityStackSupervisor.java |   2 +
 .../java/com/android/server/am/LockTaskNotify.java |   1 +
 .../com/android/server/audio/AudioService.java     |  27 ++
 .../android/server/policy/PhoneWindowManager.java  | 151 +++++++---
 .../android/server/power/PowerManagerService.java  |   1 +
 .../server/statusbar/StatusBarManagerService.java  |  77 +++++
 .../android/server/wm/WindowManagerService.java    |   5 +
 63 files changed, 678 insertions(+), 1326 deletions(-)
 delete mode 100755 packages/SystemUI/res/drawable-hdpi/ic_sysbar_docked.png
 delete mode 100755 packages/SystemUI/res/drawable-land-hdpi/ic_sysbar_docked.png
 delete mode 100755 packages/SystemUI/res/drawable-land-xhdpi/ic_sysbar_docked.png
 delete mode 100755 packages/SystemUI/res/drawable-land-xxhdpi/ic_sysbar_docked.png
 delete mode 100755 packages/SystemUI/res/drawable-land-xxxhdpi/ic_sysbar_docked.png
 delete mode 100755 packages/SystemUI/res/drawable-land/ic_sysbar_docked.png
 delete mode 100644 packages/SystemUI/res/drawable-ldrtl-hdpi/ic_sysbar_back.png
 delete mode 100644 packages/SystemUI/res/drawable-ldrtl-mdpi/ic_sysbar_back.png
 delete mode 100644 packages/SystemUI/res/drawable-ldrtl-xhdpi/ic_sysbar_back.png
 delete mode 100644 packages/SystemUI/res/drawable-ldrtl-xxhdpi/ic_sysbar_back.png
 delete mode 100644 packages/SystemUI/res/drawable-mdpi/ic_sysbar_back.png
 delete mode 100644 packages/SystemUI/res/drawable-mdpi/ic_sysbar_back_ime.png
 delete mode 100755 packages/SystemUI/res/drawable-mdpi/ic_sysbar_docked.png
 delete mode 100644 packages/SystemUI/res/drawable-mdpi/ic_sysbar_home.png
 delete mode 100644 packages/SystemUI/res/drawable-mdpi/ic_sysbar_menu.png
 delete mode 100644 packages/SystemUI/res/drawable-mdpi/ic_sysbar_recent.png
 delete mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back.png
 delete mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back_ime.png
 delete mode 100755 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_docked.png
 delete mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_home.png
 delete mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_menu.png
 delete mode 100644 packages/SystemUI/res/drawable-xhdpi/ic_sysbar_recent.png
 delete mode 100644 packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_back.png
 delete mode 100644 packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_back_ime.png
 delete mode 100755 packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_docked.png
 delete mode 100644 packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_home.png
 delete mode 100644 packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_menu.png
 delete mode 100644 packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_recent.png
 delete mode 100644 packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_back.png
 delete mode 100644 packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_back_ime.png
 delete mode 100755 packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_docked.png
 delete mode 100644 packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_home.png
 delete mode 100644 packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_recent.png
 delete mode 100644 packages/SystemUI/src/com/android/systemui/statusbar/car/CarBatteryController.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/statusbar/car/CarNavigationBarController.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/statusbar/car/CarNavigationBarView.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/statusbar/car/CarNavigationButton.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/statusbar/car/CarStatusBar.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/statusbar/car/FullscreenUserSwitcher.java
 delete mode 100644 packages/SystemUI/src/com/android/systemui/statusbar/car/UserGridView.java

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index 38ddb7a599a..97218714573 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -5382,6 +5382,235 @@ public final class Settings {
         public static final int LOCATION_MODE_HIGH_ACCURACY = 3;
 
         /**
+         * @hide
+         */
+        public static final String NAVIGATION_BAR_HEIGHT_LANDSCAPE = "navigation_bar_height_landscape";
+
+        /**
+         * @hide
+         */
+        public static final String NAVIGATION_BAR_HEIGHT = "navigation_bar_height";
+
+        /**
+         * @hide
+         */
+        public static final String NAVIGATION_BAR_WIDTH = "navigation_bar_width";
+
+        /**
+         * Add or remove software navigation bar
+         * @hide
+         */
+        public static final String NAVIGATION_BAR_VISIBLE = "navigation_bar_visible";
+
+        /**
+         * Navigation bar mode
+         *
+         * @hide
+         */
+        public static final String NAVIGATION_BAR_MODE = "navigation_bar_mode";
+
+        /**
+         * Fling actions
+         *
+         * @hide
+         */
+        public static final String FLING_GESTURE_ACTIONS = "fling_gesture_configs";
+
+        /**
+         * Fling logo visible
+         *
+         * @hide
+         */
+        public static final String FLING_LOGO_VISIBLE = "fling_logo_visible";
+
+        /**
+         * Fling logo animates
+         *
+         * @hide
+         */
+        public static final String FLING_LOGO_ANIMATES= "fling_logo_animates";
+
+        /**
+         * Fling logo animates
+         *
+         * @hide
+         */
+        public static final String FLING_LOGO_COLOR = "fling_logo_color";
+
+        /**
+         * Fling pulse music visualizer
+         *
+         * @hide
+         */
+        public static final String FLING_PULSE_ENABLED = "fling_pulse_enabled";
+
+        /**
+         * Fling pulse music visualizer color
+         *
+         * @hide
+         */
+        public static final String FLING_PULSE_COLOR = "fling_pulse_color";
+
+        /**
+         * Fling ripple effect
+         *
+         * @hide
+         */
+        public static final String FLING_RIPPLE_ENABLED = "fling_ripple_enabled";
+
+        /**
+         * Fling ripple color
+         *
+         * @hide
+         */
+        public static final String FLING_RIPPLE_COLOR = "fling_ripple_color";
+
+        /**
+         * Fling gesture trails on/off
+         *
+         * @hide
+         */
+        public static final String FLING_TRAILS_ENABLED = "fling_trails_enabled";
+
+        /**
+         * Fling gesture trails color
+         *
+         * @hide
+         */
+        public static final String FLING_TRAILS_COLOR = "fling_trails_color";
+
+        /**
+         * Fling pulse lavalamp psychedelic colors
+         *
+         * @hide
+         */
+        public static final String FLING_PULSE_LAVALAMP_ENABLED = "fling_pulse_lavalamp_enabled";
+
+        /**
+         * Fling pulse lavalamp animation speed
+         *
+         * @hide
+         */
+        public static final String FLING_PULSE_LAVALAMP_SPEED = "fling_pulse_lavalamp_speed";
+
+        /**
+         * Pulse renderer implementation
+         *
+         * @hide
+         */
+        public static final String PULSE_RENDER_STYLE_URI = "pulse_render_style";
+
+        /**
+         * time it takes to execute Fling long press action
+         *
+         * @hide
+         */
+        public static final String FLING_LONGPRESS_TIMEOUT = "fling_longpress_timeout";
+
+        /**
+         * distance to swipe right when device is in portrait orientation to
+         * trigger action
+         *
+         * @hide
+         */
+        public static final String FLING_LONGSWIPE_THRESHOLD_RIGHT_PORT = "fling_longswipe_threshold_right_port";
+
+        /**
+         * distance to swipe left when device is in portrait orientation to
+         * trigger action
+         *
+         * @hide
+         */
+        public static final String FLING_LONGSWIPE_THRESHOLD_LEFT_PORT = "fling_longswipe_threshold_left_port";
+
+        /**
+         * distance to swipe right when device is in landscape orientation to
+         * trigger action. Apples to a horizontal layout (tablet/phablet)
+         *
+         * @hide
+         */
+        public static final String FLING_LONGSWIPE_THRESHOLD_RIGHT_LAND = "fling_longswipe_threshold_right_land";
+
+        /**
+         * distance to swipe left when device is in landscape orientation to
+         * trigger action. Apples to a horizontal layout (tablet/phablet)
+         *
+         * @hide
+         */
+        public static final String FLING_LONGSWIPE_THRESHOLD_LEFT_LAND = "fling_longswipe_threshold_left_land";
+
+        /**
+         * distance to swipe up when device is in landscape orientation to
+         * trigger action. Apples to a vertical layout (phones)
+         *
+         * @hide
+         */
+        public static final String FLING_LONGSWIPE_THRESHOLD_UP_LAND = "fling_longswipe_threshold_up_land";
+
+        /**
+         * distance to swipe down when device is in landscape orientation to
+         * trigger action. Apples to a horizontal layout (phones)
+         *
+         * @hide
+         */
+        public static final String FLING_LONGSWIPE_THRESHOLD_DOWN_LAND = "fling_longswipe_threshold_down_land";
+
+        /**
+         * width of Fling trails stroke, in density pixels
+         *
+         * @hide
+         */
+        public static final String FLING_TRAILS_WIDTH = "fling_trails_width";
+
+        /**
+         * Navbar buttons transparency
+         * @hide
+         */
+        public static final String NAVBAR_BUTTONS_ALPHA = "navbar_buttons_alpha";
+
+        /**
+         * Custom Pulse Widths
+         * @hide
+         */
+        public static final String PULSE_CUSTOM_DIMEN = "pulse_custom_dimen";
+
+        /**
+         * Custom Spacing Between Pulse Bars
+         * @hide
+         */
+        public static final String PULSE_CUSTOM_DIV = "pulse_custom_div";
+
+        /**
+         * Custom Pulse Block Size
+         * @hide
+         */
+        public static final String PULSE_FILLED_BLOCK_SIZE = "pulse_filled_block_size";
+
+        /**
+         * Custom Spacing Between Pulse Blocks
+         * @hide
+         */
+        public static final String PULSE_EMPTY_BLOCK_SIZE = "pulse_empty_block_size";
+
+        /**
+         * Custom Pulse Sanity Levels
+         * @hide
+         */
+        public static final String PULSE_CUSTOM_FUDGE_FACTOR = "pulse_custom_fudge_factor";
+
+        /**
+         * Pulse Fudge Factor
+         * @hide
+         */
+        public static final String PULSE_SOLID_FUDGE_FACTOR = "pulse_solid_fudge_factor";
+
+        /**
+         * Pulse Lavamp Animation Speed
+         * @hide
+         */
+	public static final String PULSE_LAVALAMP_SOLID_SPEED = "lava_lamp_solid_speed";
+
+        /**
          * A flag containing settings used for biometric weak
          * @hide
          */
diff --git a/core/java/android/view/IWindowManager.aidl b/core/java/android/view/IWindowManager.aidl
index 855b1bce115..d402d666273 100644
--- a/core/java/android/view/IWindowManager.aidl
+++ b/core/java/android/view/IWindowManager.aidl
@@ -346,6 +346,11 @@ interface IWindowManager
     boolean hasNavigationBar();
 
     /**
+     * Device needs a software navigation bar (because it has no hardware keys).
+     */
+    boolean needsNavigationBar();
+
+    /**
      * Lock the device immediately with the specified options (can be null).
      */
     void lockNow(in Bundle options);
diff --git a/core/java/android/view/WindowManagerPolicy.java b/core/java/android/view/WindowManagerPolicy.java
index 46e23bf6995..cfda86e687b 100644
--- a/core/java/android/view/WindowManagerPolicy.java
+++ b/core/java/android/view/WindowManagerPolicy.java
@@ -1323,6 +1323,11 @@ public interface WindowManagerPolicy {
     public boolean hasNavigationBar();
 
     /**
+     * Device requires a software navigation bar.
+     */
+    public boolean needsNavigationBar();
+
+    /**
      * Lock the device now.
      */
     public void lockNow(Bundle options);
diff --git a/core/java/com/android/internal/statusbar/IStatusBar.aidl b/core/java/com/android/internal/statusbar/IStatusBar.aidl
index 20f10b33343..2fd3a07f8f8 100644
--- a/core/java/com/android/internal/statusbar/IStatusBar.aidl
+++ b/core/java/com/android/internal/statusbar/IStatusBar.aidl
@@ -96,6 +96,7 @@ oneway interface IStatusBar
 
     void showAssistDisclosure();
     void startAssist(in Bundle args);
+    void screenPinningStateChanged(boolean enabled);
 
     /**
      * Notifies the status bar that a camera launch gesture has been detected.
diff --git a/core/java/com/android/internal/statusbar/IStatusBarService.aidl b/core/java/com/android/internal/statusbar/IStatusBarService.aidl
index 698e387175f..51e3517a45c 100644
--- a/core/java/com/android/internal/statusbar/IStatusBarService.aidl
+++ b/core/java/com/android/internal/statusbar/IStatusBarService.aidl
@@ -67,4 +67,12 @@ interface IStatusBarService
     void remTile(in ComponentName tile);
     void clickTile(in ComponentName tile);
     void handleSystemNavigationKey(in int key);
+
+    // Start DU methods
+    void toggleRecentApps();
+    void toggleSplitScreen();
+    void preloadRecentApps();
+    void cancelPreloadRecentApps();
+    void startAssist(in Bundle args);
+    void screenPinningStateChanged(boolean enabled);
 }
diff --git a/media/java/android/media/IAudioService.aidl b/media/java/android/media/IAudioService.aidl
index c7931fcd297..42089ea6f3d 100644
--- a/media/java/android/media/IAudioService.aidl
+++ b/media/java/android/media/IAudioService.aidl
@@ -165,4 +165,15 @@ interface IAudioService {
     oneway void unregisterRecordingCallback(in IRecordingConfigDispatcher rcdb);
 
     List<AudioRecordingConfiguration> getActiveRecordingConfigurations();
+
+    /**
+     * Internal DU api to protect Pulse
+     * @hide
+     */
+    void setVisualizerLocked(boolean doLock);
+
+    /**
+     * @hide
+     */
+    boolean isVisualizerLocked(String callingPackage);
 }
diff --git a/media/java/android/media/audiofx/Visualizer.java b/media/java/android/media/audiofx/Visualizer.java
index 0fe7246e85c..033f5f00f08 100644
--- a/media/java/android/media/audiofx/Visualizer.java
+++ b/media/java/android/media/audiofx/Visualizer.java
@@ -17,11 +17,18 @@
 package android.media.audiofx;
 
 import android.app.ActivityThread;
+import android.content.Context;
 import android.util.Log;
 import java.lang.ref.WeakReference;
+
+import android.media.IAudioService;
+import android.os.Binder;
 import android.os.Handler;
+import android.os.IBinder;
 import android.os.Looper;
 import android.os.Message;
+import android.os.RemoteException;
+import android.os.ServiceManager;
 
 /**
  * The Visualizer class enables application to retrieve part of the currently playing audio for
@@ -206,6 +213,29 @@ public class Visualizer {
 
         synchronized (mStateLock) {
             mState = STATE_UNINITIALIZED;
+
+            // if audio service locks us out, stay uninitialized
+            // throw UnsupportedOperationException as caller is required
+            // to catch and handle it
+            boolean isLocked = false;
+            String packageName = "";
+            try {
+                IBinder b = ServiceManager.getService(Context.AUDIO_SERVICE);
+                IAudioService audioService = IAudioService.Stub.asInterface(b);
+                packageName = ActivityThread.currentPackageName();
+                if (packageName == null && android.os.Process.SYSTEM_UID == Binder.getCallingUid()) {
+                    packageName = "android";
+                }
+                isLocked = audioService.isVisualizerLocked(packageName);
+            } catch (RemoteException e) {
+                Log.e(TAG,
+                        "Error checking visualizer lock in AudioManager, disabling visualizer lock");
+            }
+            if (isLocked) {
+                throw (new UnsupportedOperationException(packageName
+                        + " is locked out from Visualizer by Pulse"));
+            }
+
             // native initialization
             int result = native_setup(new WeakReference<Visualizer>(this), audioSession, id,
                     ActivityThread.currentOpPackageName());
diff --git a/packages/SystemUI/Android.mk b/packages/SystemUI/Android.mk
index 00849695f29..a7ae6fc22b7 100644
--- a/packages/SystemUI/Android.mk
+++ b/packages/SystemUI/Android.mk
@@ -20,6 +20,8 @@ LOCAL_MODULE_TAGS := optional
 
 LOCAL_SRC_FILES := $(call all-java-files-under, src) $(call all-Iaidl-files-under, src)
 
+LOCAL_SRC_FILES += $(call all-java-files-under, ../../../../packages/apps/DUI/src)
+
 LOCAL_STATIC_JAVA_LIBRARIES := \
     Keyguard \
     android-support-v7-recyclerview \
@@ -29,11 +31,10 @@ LOCAL_STATIC_JAVA_LIBRARIES := \
     android-support-v17-leanback \
     framework-protos \
     SystemUI-proto-tags \
-    rebound \
-    android-support-v7-cardview \
-    android-opt-cards
+    trail-drawing \
+    rebound
 
-LOCAL_JAVA_LIBRARIES := telephony-common
+LOCAL_JAVA_LIBRARIES := telephony-common org.dirtyunicorns.utils
 
 LOCAL_PACKAGE_NAME := SystemUI
 LOCAL_CERTIFICATE := platform
diff --git a/packages/SystemUI/AndroidManifest.xml b/packages/SystemUI/AndroidManifest.xml
index 1fdd41f2467..0135fb1dba6 100644
--- a/packages/SystemUI/AndroidManifest.xml
+++ b/packages/SystemUI/AndroidManifest.xml
@@ -175,6 +175,12 @@
     <!-- OmniJaws -->
     <uses-permission android:name="org.omnirom.omnijaws.READ_WEATHER" />
 
+    <!-- DU permissions -->
+    <uses-permission android:name="android.permission.FORCE_STOP_PACKAGES" />
+    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
+    <uses-permission android:name="android.permission.RECORD_AUDIO" />
+    <uses-permission android:name="android.permission.MANAGE_DOCUMENTS" />
+
     <application
         android:name=".SystemUIApplication"
         android:persistent="true"
diff --git a/packages/SystemUI/proguard.flags b/packages/SystemUI/proguard.flags
index d0c2d29ebec..2cf1b510870 100644
--- a/packages/SystemUI/proguard.flags
+++ b/packages/SystemUI/proguard.flags
@@ -36,3 +36,6 @@
 
 -keep class ** extends android.support.v14.preference.PreferenceFragment
 -keep class com.android.systemui.tuner.*
+
+# Fling trail-drawaing library fix
+-dontwarn com.google.common.annotations.VisibleForTesting
diff --git a/packages/SystemUI/res/drawable-hdpi/ic_sysbar_docked.png b/packages/SystemUI/res/drawable-hdpi/ic_sysbar_docked.png
deleted file mode 100755
index 0622ddc420e3372f25aa38c9b1426f8913ec842a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1254
zcmeAS@N?(olHy`uVBq!ia0vp^iXhCv1|-9u9Lfh$Ea{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJcn%7)lKo7+xhXFj&oCU=S~uvn$XBD8ZKG?e4<x9|RZdT|OBo
z!dc)ES<Jwo;|;=$OKqpE1PZd3c>21sKVW9z(lyPDao^9tz`ViJ#W5t}@Y`@tkLW;=
z+V}3wx~?XUE;)({NgIN-v_ibh^L9-ro7lT@g5IqOIwC9!J2)O46Fj(-`Rt{R!%jKf
zc_xN;cWju@yKI}MFmIDE--9Vf{@nZhyH4$LR^9&CpASCNw^hIU`TcIWztf4cUQssZ
zyB|ojT>sx|{mz?1Yk7l+Wk$`uC;FXSrVWt|><`##CNt(8Ge7;KwT6>v+qP|sl$0i(
zNdNbp>+>hQ#{Q4oKeuh)o~(52*s&F1tB>A36QJ>>nYGox&8>wc=)rNDqeqV(N!xsJ
zMaQ{wezWGz?cKiJ&)<Kqk4s8Y(xI66`2UO6u6-Mto&EZBNn@dey`5cNqSKGfn~nLO
z1U`HAY*J%m<BX1Z^W<htpRV5Z<K(Gh{=UAUhpM-1+46-iCVx4%nETtZYROLzx!9WH
zL;@osJlfjZ|LZ;a^Jh+cM1;oun>Q61)~#Q!zxMKlix(aF`1mXsK33T9t9H+rKY#rZ
zwWedC>(;JKU9*1u^47CweN~UGU$f?gO6LKE_1CNG%ge)8v`o3l;Cq6RqhMNx`;&g9
zUAuR$^jhkb;UmJx6!jpCzk=7mgW=fA{=U9@$3vYm&iwgPV`O47C8D#bsp*Lqi>u-P
zt_r)2LQ=hI8->`K8#f7hB{tOTI+w_L_3w!`QNx)&;>WfrELphl;l}gNXSb~@d;9jS
zF5|va4XRH*|NeVftb1vX|5NGa=H`^5qDfn}Z@)Zoq9E&@sjix#heK7x8~E3s+O^9n
z)z_ETRH}E$s#RL0stj2-?6ph2Djnebp~O5PU9iGl!Tz+fFv|g-4s(OsrQcW{i+_6i
z{{3+mi@AQMybiY>e)#^;#A%T&2iX5)Byi33b5Bc4OS<~v?c1f6mX?nMziwF2arj}z
z#;CRVZtm{B7qs7BVm+2<^XY>p+p@6L>(de*$og+6soERIIX`s?chBL9>8HPXY$`us
zHuW+8yu*i`S*J|g^lYz?f@Z7d%7(|D34grB4b9EN8~rzJ+&J-N*>2I*t5;_#3UH((
z{rU81lL@o4;DjHHVN7=dCN<8TGpFD{`?Pg?Ls+CDVv^l>dFDOQy^~}*k9nRa!?Dl<
zfhKCw5_VsfvK`xezr|>sfVJ#O-ZMF7-TER6ZVB4Qq{J}E=k(6?&A4>s$`lLJ$neSk
z{{372U`h9e`HhbsC(9quXRbNXz9%*|c89O{@v`FL%^EEs;o*xL?=nBAZxE7ftSMip
zxcPu*YmBR_Yv){^VufGkYqxC+lQ5GxzSMR>kmHlgoScviGEMP!*F5>kz4L13hHk^M
zEMRt4Epd$~Nl7e8wMs5Z1yT$~28L$32FAJuCLx9fRwkxara-oZm4U&%ub#J1H00)|
zWTsW(*06rX$26b@NstY}`DrEPiAAXljw$&`sS2LCiRr09sfj6-g(p)%g%5+LtDnm{
Hr-UW|EVv^Q

diff --git a/packages/SystemUI/res/drawable-land-hdpi/ic_sysbar_docked.png b/packages/SystemUI/res/drawable-land-hdpi/ic_sysbar_docked.png
deleted file mode 100755
index c03ad203f47b9e4ab62752d3b791cad15d8d71e5..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1151
zcmeAS@N?(olHy`uVBq!ia0vp^iXhCv1|-9u9Lfh$Ea{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJcn%7)lKo7+xhXFj&oCU=S~uvn$XBD8ZKG?e4<x9|RZdT|OBo
z!dc)ES<Jwo;|;=$OKqpE1PZd3c>21sKVW9z(lyPDao^9t!0hSi;usQf_-(kihjgGw
z?PSj=?$9ZZ4*7ezELpkbu8FQl(2CxUDNb+C`D$Of#?i%*=d?Q@ylz*aX4mc}jl4S?
zNBMhmGj|I+dTfZ|?yUdwNWXLDJnLHhv_n2y$}YNoeqfOQ?oRQ&nb!Qz?2ZK~Cu(#l
zB|Hjv&s*d&@5u8Y8+Fd}0oH*rmwYdspZ>3Dakh)a7RL9DmIv5>2s>=7Oi+;Oje97w
zi|@k@!Sue@w_HL^*uuiYlhqV#7X6VEJX*2h{Dj-bEo<u!ND8W5yLQdbhlh{Pt8Dk&
zWzz~Q{>+_x=!l_1hmh043+X~E&xN12Oe#3EO5;oB+(nC&uHC<{f7EBo)~%kBl9DES
zODZZX&a*Cdc6NUE>({SO&z?O~U%Pg#XlQ8Yx|J(eZhv(3+qZA~3WVid&%FM+Z{@mm
zdQ1OIn>MX$)~s2ZIy*W0E9y#0OxjEJQc_blzI*phSa|N-xj|)R+YCN7PxqCSliSxl
zBP1rKX6KS6Ds#oY{QkSX<-xyy|E{-qY1qwwZ+LW$U;3`Y4+AVOU%s5W<oIfHf3;7a
zK1Jl`=NAbdKYskwlP61(YisAOU9;vw-9*oV%*>arM#3j_pZ|7on{%M7yj*_H?ISN<
zyvWr#vTfV8BsHc+halmKxO3+7WIA0^UTo;??X6E|k}?wWpXmXGKl*)o`up!6l%F6g
zBQryAQ-QGl<e407&HXz#xy95roIQKC{kfT;v2k&6W#vp=J-t~1(=Sd4(Ebs_@oMIc
zn>RI&-k*F?UgQ}k&&J=&X92CAU}S7;I#+b&jJb1byIzKJ+$h}J=cgt9_h|N9uOn94
zQ~t5;*g1t?Kwo}OdZF5tb6s(}mM?dY?wm76##dG3p75)li2jwqoEMW{6^7V`1g~v5
zn|3+u(A%<ZY023aPIoRZJNLun%Cq2|_vcRCym#+k$2rcxfcNwHu%Jrg<*Qe_+Qa@x
z?@MLK-^K99=K#~H*1zI1*%=u-9OvxXwJZ9Dd9sN4qX}{^w{72U{qxvWsSg!4hd7FN
z#uzONYdFVnoyXz)r?p|(QXjdvxb!aljkLHiA#>~2t*@e5TU({%x6DpHzU9;@FJq^)
z$tRb@JyuLw(G=Nfee2;pr^3i-yq3VQ-Si;f{Y<IO$Kp)KW*@YvcYO)WXR0Nx5hW>!
zC8<`)MX5lF!N|bSOxM6z*T5vi(7?*X)XEgdwy-iVxcAlb7K(=4{FKbJO57UOulSe-
x)F276Aviy+q&%@GmBBG3KPgqgGdD3kH7GSPrLyp3DyURo@O1TaS?83{1OOCK`ZE9k

diff --git a/packages/SystemUI/res/drawable-land-xhdpi/ic_sysbar_docked.png b/packages/SystemUI/res/drawable-land-xhdpi/ic_sysbar_docked.png
deleted file mode 100755
index bfe2b4a973c6b10db1e1db78c904ea04ed7fbfba..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1402
zcmZ`(S5#985PgUy8j6ZJC|yOcPz+UkNV0*j5Cf66LIfp&1Vq3@q!;OgDyv9Q+DcQ{
z5D*hEWRU<OAcC|g7TTgn5s?<8g$<v6?3pujXYR~B_ivJH@D@@qc^CiyQdmojod`9z
zb2mg(mE$gniD0KE+8PZ2PtqkeNV`PyVRuVAYXAsU2Y{$J09X@IQIh}=fB=ALA^?Cn
z0C13&S8sbxw1BwbEHJ><cKp@wC_}{Tp;;1ciX3p;DOPHdRW2f-{#a{s=&1Nkn3jQ;
zi$$Zz6obW}9h_Qbb1qw|I>OuLjvW{pWV+5iz`I>7?V%Ib|8-NDZh5}yWaDruX05u*
zOalpr`Fd?kRt#QyoWdW1KY?FL-uqnM)^)=v9%kO29dq)Otqr_#m6qDE6xnY)<x_91
zJ}Y>LfJ(1`H@mkszTY>#!->0EMhL{IXLw~FOQI_*(3JAX&$KT{UAbS#mr26F;Hq>Y
z{tp=|0<c=|*|j(@_GhO~S{_z$hPHoVWo(lM{l_AHBvay)Y`7zZ8Otv+NFnFDC{18&
zkKM71L(0}I(bY;mWs%(#B_bSqNnpC?3$h+3YkguO!Sh01=i8wHA$l|->qK+an4@K?
zFs;ogHK*vjx_EAG?nYnV-RSO2kf2}0O0a|S=AOnco{c`Otqu8dyL|GM{pFW#kqQb5
z8bKTvihqGc5Cz9SheD~?i8CId>2$g(!}%yq7~<{SDYtv4^7^I_JDr1C2yGY-3kyS?
ztdjx{OifNA_DV|L6F17cBE<>}3@i&rj-07UV2sZPD<`y&8fzxz=jXFm0b_!0goBJw
zxpmewx67mTgw1I!EjCe8MNW<bZC}brY#Z+t2m%*-dV1`6Ij*&Ac0+WY@$bdGRtElH
zK9PN?9Dm~keC-au#Mufwdv?`=SN=IRHkSUZtCwk@uYXV9&@gLoR-jv-$l-9pqByo<
ziZ9vkcA<mCMoS%v%gf74xZK?7Lp@_E1<>kGq~o}^olk)NRyUoR+FC*F`O!|%3Cu@A
zMiOFA6)r5)Y^2AJzMJB1!JV{OH8n-@!G3;yEG`!(SXr^>U9U5)ycrNsD(20TuZA#w
zfsIH234&`6)JBpqM<L;A{bpR#P~V7%O(ix@Pft(QiZe4av*W75zTCG>XNFeZNEyke
zA=|A4p$%Yqo0*}Z;jqKv{k`0%gSccpy~dG3W|A~Yc!pQ3Ng(qsj203<9N!EHekZXd
zS@?D2sP;qPw#{f$Q&Xd2$#3HtRwz%7my+gB`xnAyQ*+2UhP)9RmiB5{Z8?j~8|&`I
zFaG%P0|#&%hV8xP!@;~zu^rL8HipI$kX~S!{9am|AZgN`QQa2Fe(w`BJu^cc*O~K}
zd{Hx*cs`$q_-Q+lBGe>;w9L%Rs)B+7X2)F0hwpurIw;iE5q(M8W^;2hG<mjY?b-6T
zZ{L#m*CMQ&Fn;KR1APAbi;j*eK2$1quxY5+1&KrsCx1#73U6Hw2naYbQI?dHv@-Cy
zPo5=v?Ut>x^SZ2`>+3z<bszgJ1hOfmhqAAX88Kr_AKxhW8edUS@iFG`zKjk`wL$Vy
zXam6)`S-FegHcwNK)rrl{m@ghH{IQLTU*Uz3N@KkRdW}q)T;gN__?Vm9WWpNoXyT;
zu~_?jpt>d|*7f!ElG1duOi1MyKMu^PKk?01)dyZ#Ew`X|jZ)FZ$k$S$7o+BH?&MD<
z`BOl5KZ*zdU4)LI7D7)8q3@uB0QC((15s}TA`rvN*bl!5e5qtFkC6WtR6U;e5DDbA
r9qg$d{y`)^3V<e4-6)5#z9dhI9fd>=xzRz{eux0p9FJj|5@Y@YI52{1

diff --git a/packages/SystemUI/res/drawable-land-xxhdpi/ic_sysbar_docked.png b/packages/SystemUI/res/drawable-land-xxhdpi/ic_sysbar_docked.png
deleted file mode 100755
index 5ed0ee8c74f7dded0f72e205894da9c8898720c1..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1643
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

diff --git a/packages/SystemUI/res/drawable-land-xxxhdpi/ic_sysbar_docked.png b/packages/SystemUI/res/drawable-land-xxxhdpi/ic_sysbar_docked.png
deleted file mode 100755
index d1811629f41719d6dd8d4648c89e8c1325c75b13..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 995
zcmeAS@N?(olHy`uVBq!ia0vp^5g^RL1|$oo8khhn&H|6fVg?2sZxCi&YCCNuP*AeO
zHKHUqKdq!Zu_%?nF(p4KRlzeiF+DXXH8G{K@MNkD0|Rq`r;B4q#jQ7U4(45U5NNyJ
zH`zpW(aHb?4#h$S#UqVg7nmQ(Xtuko5{UT};(0~;)k^*YvK111wgOHW(oz{Y`o?c1
z0-{9oUw!@c;s2!-p+Rr|e6HM+EpO%JD8K?kC9$oEH!eiI5A@k8`*BzGoagm%k1Wm|
z<$ivWRZsQSrie4Gj}~d%(&`fL(p_Ef{Bx!9@uq(wX0y+lP2c+=U2l($824hoZ@mAm
ztqxnw{Ojh4O82ZaYuEBx{@)*$wRM)TzM}xov^_DrXA?de#U9k>>k69k{lfRZYJYbL
zoM+7CPd@+IOh(4>zUKSfkCP(VKi{7kd%*T}Q}Kk<j|Ur0_dU=`4Ddd!r~6=%&Z{8P
zj}JL>rmtGI_qQ)YICnq@(~a^sNBy}i3?jBnc@$Q+t?TyRzkkL5*8Pv|`ZMp~wxrA5
zQ<rnhuFgq}TeRt$P|6$qN8+}2KYX(mxzE4Bw7T_&p^&Xmn=9L&?ne<_-poJW99VVz
z^>Q(W&Ha}9Kg_&yacx+3SjqvOEVTu}@^N1-ZP>t2p*NwI!F=}F`L1khmM%E4pgFm!
z^MV+|aUr$sH32I_jP9;0I1%~nk@ksS%*HGS7<d>B7?=$}i~|D53<hVQ2v`=*fG9&%
z4^}3?usdMcf1Y()|HVu>bmFvmiNQ7wjqn47GV(hOBwa5S2JV^h%#?AB`s9=D;;y~N
zANyxz9ynfN_4mP{?zMYtHowW+e)}%p;SU<;Gv~}%fBEH}Cx0F_^FKQ~ckbNhdV9W9
z?ae(^ul|~y<=vOrBK&3L<?+u$C7w(2wdZTRS3Vi<#qc@3`QU@xd2w!w1*<DP3cZ)k
zP)=9!-?iNJ<Bq#|`>iZ2D)Lub#7)2c+-Ayq&7-wn%jYC&?!56Q_FUY&fIEvL!Zq8U
zRJO&Q`K(-N@vQAs-GWO?f7`M8H~#V}Tyd^lMs>6H>qn`!%a<>V*yE%5V}ZA+=IWG)
z9HT(32_JOCk32r;cjafrx`LOxBWyx9?Tgi4IXm&w3<J5yZ_Z2Sb8i<?(0kTaQg~D7
z$&wW_OU|y`WpVVp@DAxqN4F`sGktf_t60I4ws9?&`b_mV(eEBC3H~Dbk2%%CqNKH3
z)>Gnq$nL(CHf?iXHdS2YYEs~6QqTzhE0(};cj6V@LgOXOzzoXZ>FVdQ&MBb@0I6xa
A=>Px#

diff --git a/packages/SystemUI/res/drawable-land/ic_sysbar_docked.png b/packages/SystemUI/res/drawable-land/ic_sysbar_docked.png
deleted file mode 100755
index 236b70afffef835cf19b3ef83a91d9a7c84173f7..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 907
zcmeAS@N?(olHy`uVBq!ia0vp^Vj#@H1|*Mc$*~4fEa{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJcn%7)lKo7+xhXFj&oCU=S~uvn$XBD8ZKG?e4<x9|RZdT|OBo
z!dc)ES<Jwo;|;=$OKqpE1PZd3c>21sKVW9z(lyPDao^9tz!d7~;uvCa`t8)y*;0Wb
z$JQt3?$XSQy3@Muvg<e9Eg@OTuCx9yo>WVjo0L^9cFWh?t94q_yF1z|xT855oy2@E
zcRlhG*Al6*&Z^zN{Qk_i<&U)|tSNr@_@3o+>-{^+FBH#I@$^yUT@tJ0_*5{g!X)dO
zO^D~E1(ilKeU?6)H2><nrC;xu@ZM?mdHnH*;FlR`Pv$FaTgj9Y<nwl+RNU$f96ACu
zCQ@sa11A0J?fg=IBAa2}gs`V8%PeHp9X_nk$jip8d*sv4Ju^2|G)AlpIp-4iCsc3x
z{_j<L?~AOznzdf4w{7aRyLsl$mY*D+uUL8dNl@nM`|piCPA6PiG-GMdN?orqtGU57
zyQ0OqpX#OYo|&&1ry;WDYSz~Y*BbUMe=OB|%=*I}x7wCRH*>DJ=p-5Gq!d`qHT!&b
z&ZqpPi+5hls$EjCF~a81y7;2=(eHLT8u!)t70&r3xv`^C@Q2!2i+@Zz?&h6NnB!M2
zx*_IDj#+rq`dyE+KbTes?m2dF{<MbsE9+k~{NKZ&^MC0@^L;D38Gar(7}mgFX<xb6
zPV|7i#=O%{eYhX^sC}MOzR{?p=PBo|d*N#?%lz3Dw_d)`U+A*<JIgkgeaV}d{M05p
z>4+sS40vJ3R6lL2Yr_%`l}*C^$Kw;W8&&Vi4a&8Ux!2*gSZAUK$C(5Jjk7nO7TI#J
zFtOL|uNS}d`De}Uiii7-KfdWEetF`ZyzgZO5_gu%RG#R5&b<8c&k6N%%dWppUpGzi
zY^?S4Zw9;Xo?FIjJH5=$oGW%lSAoyL*I$ihpLLVXRWlc@+FEqqQikuF_|Mrd8PDl!
z023dBYKdz^NlIc#s#S7PDv)9@GB7mLH89pSFbOd<ure{VG6k|NtPBk9ef7MBq9Hdw
zB{QuOw}$mAKBfURNP=t#&QB{TPb^Aha7@WhN>%X8O-xS>N=;0uEIgSC${`G%u6{1-
HoD!M<ib{R^

diff --git a/packages/SystemUI/res/drawable-ldrtl-hdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-ldrtl-hdpi/ic_sysbar_back.png
deleted file mode 100644
index 2fcfdde08164d7c2bdbf11e09ed5df501fe48532..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1535
zcmV<b1pxYqP)<h;3K|Lk000e1NJLTq0015U001Hg1^@s6NQh~4000HXNkl<Zc$~FX
zZAe>J7{1AEvZ%4ijn<D@vDS~amRZ5-k5yY&EiE!ir_dkker#^Tq5C<D$ecr{Fl0Zr
z;+QZQOvi8x!EP{GP>Rs>Yls_E(b;V^eso5o@w--=J<s*rTQ@S3XnWx0B<Gxap7-N<
z-}6cmhR^3y<<X-@(vv4o3~Os^`r6FQjPzWF1~5B2%h|ZTzOKzit}iYws{79k7?w(d
zgM-ri{Je2>byZqkUgo+C1q|95u0K=YzP>&UyaIC<=1<}76ah%f<)x)1UCC$S0dcXk
zu&{6p^BiObvH-acYd@Hqo3mn1f+9R;92ptW!LMAovLj$w#JCLeEaU;i1sR7d!g?n_
z&jG|xTU$%7=<%mOv7G^rjg7r6fJbpTfu{xdB*crgAHe!70cgN~8UOY8lOx*#cDY>d
zVD`|}<KyGs+`M`7;^W7Uf7g@|AsC0XjbM5l_EhWn{q*#-?*6W>uF!xHI}O<DcDujC
zmbJ37G7sxt0f3fI2?fZ5ez^ZV<oF9rL%N>A`^fyDtoH|uxHVzRa`^D!Xw30VO--)>
z<Y%$}5HbOo2S7J0FWTg8<L2~ZAqocgU2*XoSbUjlb#--?^z?K)jzyVFrsQkauDy@^
z{zX_lD!kwU;MXfFD+jdr^G^KN74VyWTLCkDl9Q8-d3kx^iHV6099Ieo3SR2(@BakW
z{3+s2B6>N)+7D5Hl+F2%u=!8FK)`qI+~G09!Gj0o6DLkY?Af!23Pe{`RlPDXG0}!I
zZo&L9;r?DIbzyXLRK~vQenCPN9Et@8+}_?UMMOkM@$vDh0=c=lrmU<iTV!OU!uYqf
zwY`qZt_$lK`@eYyz<xyhU)J1D@>#7`>FU+1lE>o-4BXw_z1cew096Ifo;_<8@mEq(
zQqrAH=S493-lp{9U2XtgM!b{AbP{i9Xec;~dwP2Q#R-GKAnn_?PyHPe6Jvz?!xIt`
zXnoZA^XGGihlf80z_{=L6=3;&0Ht2l?gU3d2iAtgVv*|W>s4K{v$J>Q<m5!|-o0B*
zzv}AhlOWaiBKCg?=Kl)sh4Ia&<vRi{EG$&rkIH3eZf-W!)YPzu$c>GS*^`r#-!a|*
zWbK~<;qEmwG}yJ6hYU=zX$(b~rS`H&9g;=?K&|g-iRJ9Yn(NlBTW?Y+5YDJFI}~88
z8_}v1#q0G-5Hl`+gQ>)n5~;;Bb0ej`MIkzg&+Q<g<<Ox+!ISIw@#8umNMaCHs+EZ;
z1Hhkr8`VrJr!!2k*4EYwfJm_0?F#CE6~B!~j~<oM($WG0-?(u@1r*k*fJ_ah2o(6j
zw^25yHMfF1zu}vz)YQ}iWcvR7`yE9^MHZ4UE-vnA`3wYn_wHT&^<f`|7RbuZ1bg>|
zl`NSathty<B_$;}xYn_E?_MQ8KR;Yi6q%r<rKKt%gDsgdz>Hw2)Y;j|w)Y%6609$Z
zI5J(Pr>3SlE?v5G2G_;fY_=%4GZM0kfXH>fS>YELZq<QBT(j7L_%<E`g0Vn&an9M%
z(NTtL63u3_l9`!lgOz3iqNYm@hr>VU7Qmlz4c5L0z(xV2rN;~iHQ3wR`*B7_1}W;m
z3#P}BccPyEKcF9Ay%7L#Gg$c+eh-NBP~Tp5BJ4=Y%F2%6)9BdP*eJeOct99O3Cxvb
zSq=>92UsicE@9zAAs%)h>_qTM97<ypUnq1aCR&-4lq69?8X7R(&vF98su9Sj7Dsj*
z>^#_k;CK{@fc?~|Q)(Rf%<1V7>d?yF?c2A{0MILPl4b4>b{gzBa7<wb!cGKWYE#Ge
znJ?A0hi~JJWnh$nfq{>ZN>0?^7QQf8i)P2cII;twl{^myZy)eK!+<U$3>Mfir+^@_
zROHB!BQ|y%+^2<f?K2x%jL=OOPoF*=hM!@0Un7c(i`6)?<Jfi_0}aGioy*J1rIwZ!
lLq$b}8a!CMvp8-s{sClLE735@tkwVk002ovPDHLkV1g(${Xzf$

diff --git a/packages/SystemUI/res/drawable-ldrtl-mdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-ldrtl-mdpi/ic_sysbar_back.png
deleted file mode 100644
index 48708a5099a83badc09ffec99fe22ebfa443ba5e..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 965
zcmV;$13LVPP)<h;3K|Lk000e1NJLTq000&M000;W1^@s6{=N-M000AwNkl<Zc$}S-
zUr19?9LLYScX!LmQjwTh*+V0J5XSH?fj$(j-V%Hg5uqO3L#POmAQ`^8{KN1e5+8ag
z|DX>_dkUps+LH^+h{XhDx%sa-H+61qeSf!mhC*)B1BZLgx#xU-zw`b5&X0vcAr_Cv
zl^%=5MCyLOKe2Z1#sT~L`vRbRE*>2niTvNr&d%AvbO?t90swX!@FEUGmktjP1wMB=
zo#}(4(Wn@SMA+``?oAy2f$oEW*WqwjkAGYqDG&%S7$M_nOCgar>+9<^`0k*4(c^&q
z1lSS`1}_{O93=GT-jg$Ffn6@w1AK!B=4YSJ_nyY+M}W-&Vm=mN2?i7LY;A3&1wP!{
z+Z)4jmfdcD3L_4zMbLL4!8;fzA}J^)WB_s{45S2O^Ej4;jEoFzWo4ydVPWAFfG$-Y
z55QfJCI|aSZ$<yr)l~+EC|*gyW2zUL#>Pf1w&+@0Tg!2H2#^icz&Ah|5Ks+*uE=vd
zJ;6!}rfUk5lardNswx=<t_%+kKgQ#+V||bI0{9UI?(zL=Yio=i96hk4;O_2juAwkE
zI7o0!c6RplnVFeqki!}O*Z#o38>He5k^-I!siY7_Mn;%Ur(;H=G4Udso14kN#nRH!
zyNip9F9CI9J&f;{`T2R->-93EsE`yqF)?u>;<%=Sd>4Crds$ak*HxT(0WS$0!VSJ!
zES5{;%+k_Qa`5!@G*h3t5`FS!V`D=EtQPZmiX-|qv>mfrttFIAbS|Y79*;**|0@Lw
zX=lQB9P@p;KC)sK9yS1zV>X-Rl9Cd!y1JSb78WK?HyorYM>Qf3Un|xq-C~%3pPQR|
zehUpyxxKwz%M01|_V(!ygzJjRmjR%K>IQ`$<KJ$#+lKr$QhwLh*K1)!$zOxP!1D9+
z|NB7h)APl~52~&YsZL-VMGtIlZcg;|^_g+xa&2v`>~J_V+=0Bjyp&Hmgur|P{4I^i
z5Y-C=@d>tG%gxP|DWCbZi;Ig>SGVQm<wx+)ua?ai0`-gPL`6l#9n!I_t&Mb4u3c7E
z#$;JO9jbyA>!YKiMbMXujdx{bWvHd4rJU=Chah!!cCxIjES8y>nH<O)>Ht%7Pt)Ju
zUtzP^YB0W1P*9+uI>B{35twvZPfri)=;&ZgO-*85T^$(^1_lN+{3a%o>1;sW=<w9k
n6t4vW2kP~DCP~uyplE*q5<Mxjx#BEl00000NkvXXu0mjf0`0={

diff --git a/packages/SystemUI/res/drawable-ldrtl-xhdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-ldrtl-xhdpi/ic_sysbar_back.png
deleted file mode 100644
index 3d731840a93f6ae3743b05956d8dbfc84e132564..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2084
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
O0000<MNUMnLSTZHSMMJH

diff --git a/packages/SystemUI/res/drawable-ldrtl-xxhdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-ldrtl-xxhdpi/ic_sysbar_back.png
deleted file mode 100644
index 786935d5d185c4d4b71659f4a9c868d24d5b0bc2..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1358
zcmV-U1+n^xP)<h;3K|Lk000e1NJLTq001}u002S=1^@s60zVbG000FQNkl<Zc%1E;
zT}V|~6vy{9%d`(IYMRDAw5AV*dhB6hf(eP4hN&J3%y;Y6hRL@}4?XpuAeApc8X_no
z5}KIMi;hpBh6pP6!3R-MMEpR-Z)g4QIs105UeDS4xX(HJf*bzi?c5{#=UV^0*52nZ
zwm0_1-q;&HkI>rM+AkX$8x^D~Qt|ZkbY{?#QZYi%`ucjs=H}+u77fz>|HHo%@H}0Q
zl)1UNUlYK^MA7`Zyu5sqB_Sv#o4T^H^4bp20@^q;GjpCL5o8MK00Dj!0pwa;U41@0
zJe<We2aQILl)kjI)FcDQ{YihALZ)%rVp97_M-~?sn_U3%wEd#1KcneM%3N4ja1F>s
zC8k0*e{#Sq0{oO{(oIcGPe(>ZKFFl4PX2TRtgWqmOxN?v%F6ChbUsU@?N{>kT^4ZK
z#sKH%=Mw@pG&DS->pzn&lk!?xT8e4n-y}dA$=}z4f^-CIZEbx(*Rx6INEb<03JMBt
z^!N9_BF{x+{24^rIs$ffcK%7%kCRT2PLr^RAfi`GN=j~zj*eDK`tu3%F>M_IySlo5
zr|XAFhe$_F(4R;-q)Vi{nwpv-y8k~JfBIEc907ZKd+*TogUqOx_-+OXJB%MlXGj-F
zS4jEo?d^Zdq%Ae^RbH1BQNT3PK2xdYXG9gL`y;cYE%&EP{q(Y|I0E+d_1!VQlfu5I
z6hINtbhbThWB!yWE1Mp*eX@Xjgv`&W?0eeo=ug?QV)18SfOen>{n_2!9hNOCD*U-y
zKn`gIwe_cLSs~EpY!_*(0&pv+qd&{b%m0#X`^cYvxB*oOXayDWXGcfJGq2k|F97X8
zxB1g$+xJqmtau5?A%*;jvNAb2*&yRjk+#okz^$Nm{&d~;*`=*tfL2hUvLe~`4bINa
zUQYz+H((-A+p;n=H1t-`m(|S3kT}So06C=6w$J=Maq|ok&<bi>R!U1tZ_xtuuK-}W
z`Fmnf)B$iO&_m&H`0V)j_zRH~#jz*dbA%aD)DqANxsT>kL@VT=p#LKE_4U6oBl2-+
zsvRJ960{L+6fG0<{cn|(m1yI#bp{M!=YSoAC>WwPFfj0n?!8LNC7og#rf3KcSg~V3
zEfa;qjszvdghTDbVswldM=NoqBFH)z!VUqQh$t9J1rDI;-aKY>J~_;&oq)sYt3{az
zp|!%!Kokr+4s<qjZ$2|R9YhVC&q-$ZF5LnbSfLML2O#S+>@+Oth{BIf2T?=kbJ(0)
zY9ctl0Hf)M&R^DN=wK{hIn3}H8USn5wzX$|0!Ej88J}S%fgJ^l_n8$egE>Ua55VZM
zFXJ<$;|@N<P9swm%qu|avM&S%3HU5+3z+Xm7TjlrGCsqyFX=PslQkvBhNjQH$SnIR
zedZOQtM&>9z)Z2vR02lRL_vF{)MqLH`O~EoMeUVRpX~~eKR%n9nz}Btje*aao11a0
z=UY0u0*pi=4`~s3BjYm{%f4sB5l}`h+AGhW(<=c~-Ck(}=v8~A1)!Jhl_!9-O1=|a
z_I2}_-G~9UwYA-MTK0AIncaxJPD#q1n3#B<$Y*}HS1L#Bg;-`ByXDr^)fJA7jaB1W
zT~AL>I2n9qH~7O39Jk?#DN+t+j7UL5>oPN5z&p=0_L<YbUmuf2ssR#_#3}I^^It?v
zYo9p{{yYGXh$PY#Fqx+CIVr)cBlggP8KC^dy94IWTKi09SYI08N?NG@0m4@3-Rs?&
QU;qFB07*qoM6N<$f?X4iuK)l5

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_back.png
deleted file mode 100644
index 34a11df8a5873e7900c0ccd2670c6e2ba28d0429..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1077
zcmeAS@N?(olHy`uVBq!ia0vp^Vj#@H1|*Mc$*~4fEa{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJcn%7)lKo7+xhXFj&oCU=S~uvn$XBD8ZKG?e4<x9|RZdT|OBo
z!d~L(>&kwggIUmkJ#c?l5(5LXh^LEVh{fr-Q{z2u1&SPhA1b-{q(-Wu^hGzPYMCQl
zQ>E8Dmn-4#PIyyVU83-M<#bQ}ubZYHyybi}F34k%&WeRXA!pQBnj;r<)+-1Lt$C^B
zd$#s`{(kNK6EjO6oZh>C{`b1N=X0vhP2H#+wKOQui??vr{JC=rJ2+#-S4>)HlHasz
z;q6bx`}wBq37%ZOG^o?Y*imkewiDmRbqkN19tu0T@LsFkLrZSa1tRknzbx7H^u>#g
zr$v@^k_(L9NHgp?DAB03eEIT=Z{NNxtdKwWyFf!E%TI0cn+FdX;!Sh(?@c{<dGB7^
z<!95X-;`L*e(4O<D#X`*zWH@atv}yy^N>?%o9m{Z{>l}-MOaukr@VYS>;B2d|2Ipw
z{0(b~)e(Cf9UU$2qZT~-ZeIGz5U<jTiW5x-6LL3f`X<1~-tf#{alTT{@e?Ob2v=xc
z)v-G;ecH5;-@kwNB$yujSrhkUvK#Xk$y0(Mf@Q)>Prv^9Y358x&3cPkzX{w2xil(&
z^?u@5-#mNv?DxNa{krw|<Blz9$;r*zw{6>W?wsGX+qboI*Kzl`Ew0JU?cI6zo!S)t
z343hq?D*EKUvICh@ytf7d!_P3j&_M>J;&M-7GI3`T9ul5wCO{A(!Aw&l0J%0xmCOK
z&J_0B5;{G*jz0dl;orZ1WioxT_l|4**J<=M>xr^T2(+}=(Pp`>>ywA_+<zZF6qGAX
z{L#fLxhVM$<4o6*Rwu{ib*tZRj9b6H%FfjEXsz9Rj;GJQeEHJtqxN{}`xYApy%&N9
z8IykO*q5huqN=JY!ri_7%R&c*1JkEZ-+3@0p*&&r>ebgKPo5lKRCS4=H~ETk>h=|#
z96fq_eyqEYwUvj#jr&ZRal3d-i@k}-mxA>4=gNG>n)M1CAFOvZ9EojATg5B3?DET1
zpD$hveE0qL(WI|8Zrmu|vW5GBeG%(Yj-H?^f#%m(xfd6SY}>Kp#PjFRkE*@BbLUR>
zl;`D5i-qr&y!dkX(4j+5|GToWv)?>$fZ_G4S4k__vZPkp=!$vYe)8mr_v)*^63WV^
zS<3XCc5clyne|HM=d>dI`=-yoh=>1^zpJzI`deU@Q7v(eC`m~yNwrEYN(E93Mh1qa
zx&{`y2F4+V=2oUgR>p?92If`<2G0$BZ=q<&%}>cpt3=aaVqs-q4$-i7e#bVT21$?&
s!TD(=<%vb942~)JNvR5+xryniL8*x;m4zo$L3x?M)78&qol`;+0PP*+BLDyZ

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_back_ime.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_back_ime.png
deleted file mode 100644
index 1c1e78cb0a7c3a5679ab88b18bc06b2efa31fdb4..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1037
zcmeAS@N?(olHy`uVBq!ia0vp^Vj#@H1|*Mc$*~4fEa{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJcn%7)lKo7+xhXFj&oCU=S~uvn$XBD8ZKG?e4<x9|RZdT|OBo
z!d~L(>&kwggIUl(;8G6%QU(U5H=ZtzAr`0ChQ@mYCyLmAxAJKDnr{1L!wQF%j+TTe
z+~2M_`<r#MDRnh=*tXcYUG&y>5@@y+oygB-*<@K;azbuRC*PbI)i<~7<Sj7~Hhw<m
z_w!$KU;n*U%5!@WxBb5N^WM+7Z)?53cwgYk5GBz|^-YJuJ*!gId|o-}j$tx$!Lk62
zIp>~#E^SP<2zzSbwJt)(Xx4{EEc+M}6PEh5T#b1C@L{5`!<5rcGwSQ__e_`J+xOUZ
z(%H1+uMNo-(<~2^&bC~+etrL~+qb{&-n~1%U`D5l(qWC;Pw(BkCmpu>Yn8jZd*}zr
z-y7b)diBb?&v$8%-Hoq*|NeFP;l=#Qg`1oEd*CEni<X4lORjm@IT|Q_V^!$5@#WH`
zOU`<_*P~8GSmfsA)g6dp`WS8M!S23N>PJuQgWt1~w{6>I*U2X-BQs^n*-xJ~*_fNV
z3kwUcWoKtMyiuq4pik<CK>zW~<mBcL!Jb=BzN!*_&40z@;n%ACRwu=%=;+C(ZC9-8
zGUl6?sLK?WQr1;3#c|5^Tvzs~2aj^DU%wvTd1>a^XZD*9%-*=s@MPNN!0_<vksOw%
zpD0u=dRdse|1*1zj>Im7jP1Ae`+9mN9Dh8qk9S7JN&%yzdpU25PV7|+wtevY8&~_`
z{-f+$V~(HL>AQ;Kr`zO}C%$RUfBWW5g}|*7ANksywL*9E9r5R7YwnsbdGh47cm9Yv
z8AWaAPwc5bcmDi+R?F@v+uNrmaVQ$<oNt|=kP~w9e&M#0DWCT4sMxi8_y4-ejm?)|
zPO-AK=45<6;q02IN$w4tw{5qiTzOj-|M_RlmK{4Z)P*{4t#g>`7cOQbz+v-XWz%2n
zocSA{Ex!1I`)$g#nyZ^0A2`qucA`IG^BmoI3~I0cT(}_6+u!ePIytNL%kRIRu3Qo6
z?dyxXd+**n-{qIJjg5`J8_n!7s&!ku@t-}L;De%_E0!;B_feaCF=^wL11gy=>-x7C
zeV+Wm-@mxHxUzrZ)Md+;t42;cnP3nQ9eulV<9<e+C6cehUrRUvvw~`gYeY#(Vo9o1
za#1RfVlXl=G}Se*&^0g)F*LU_HL@}`)HN`-GB9{<=z9xALvDUbW?Chh1``V_Lo<km
z<4(<UfEpx0HU#IVm6RtIr7}3C<R_&nc;+Uirv{}arc@T5Oa<jp22WQ%mvv4FO#q^i
B%q#!^

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_docked.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_docked.png
deleted file mode 100755
index 93d1905d8c48e8f40fb89234eb4f52ad1b46ead7..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 972
zcmeAS@N?(olHy`uVBq!ia0vp^Vj#@H1|*Mc$*~4fEa{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJcn%7)lKo7+xhXFj&oCU=S~uvn$XBD8ZKG?e4<x9|RZdT|OBo
z!dc)ES<Jwo;|;=$OKqpE1PZd3c>21sKVW9z(lyPDao^9tz%<R%#WBR<^xRP2Y$->H
zd2iGfntSWrbGjH^eR8X4(1f;@FZxHK>zXfIbLO@UNqV*LU(b);<(HOuF74&j(webi
zg=4SbBd)za-rjnCcU`yJ_M288HatG_+vf8*>+=>lCQ=(Ybr}CNMa;UgOM8`1R_>~r
zK#`kA4k#yNTgc=woi|OIY+)3BQ7N(S2z&EEE4EjQ_xs9Z=0Cnswf}znaVMS!5$mr%
zW-Kc%-t4?N!Xd*%%AVEHg1zo;bMcXRjsX*<y#D$&Z~JM6d0TJi?z{YQLyg^j-^pvk
zUW+WPPB4+WZqZlW@h|4WoP!Aw&h?^F>PPnO+jmb%_fpCWk3+3aj;AD=?>~)Nn=mo8
z<~dX3rShps7yrB6$=a&LIeFO<J`KsmBJrt-=N^Atv8&NSMEQ8#F-y%uUdKYFuU@@6
zcGi(stXJ;zJ#hY0cBk1{<rCuxVe#iGS0hgS`1WnuafWUeB{h~m?UKu+3n!m^5`0O?
zH_dGJ@!ipUEKJi}loI>h7Uw5#ykV`oAcEso^T7qIQraphMl&U}#kzH-pVnmzc|QGS
z&bPl$pFY)o(CfBGjc@9v7`@FwD^)T*)6{~KwWWpA;-55ita#5>;?X_*j1TMj5Uu3h
zqCqRK9PjSt4!4^7?~8r_&rzZF9l`D8-<u8y9#7uAGe$3TckAKAqj@(zPM4HFzf)oP
zCWHGqW|lK;n2!{GN}XBnsMfNy=c2u2dd}9UP~*1dDLqfUT@UG}wLI*LeaYgok@Jtk
zcOPyIF@Yyi?==q1^l9rp{`k!M@Ad}|ymyUtyc3}DMdDuC28H8as`h?*{-(rge&ybK
zwcBs+WslhM;KhrK^UpuOwU*(V9OJa?^2=rOrfKSYF!BAIYc^XbWc5{z;;O)qy9?MX
zJSyMw@$ub|=RF+!;p`Gi3t*yEEpd$~Nl7e8wMs5Z1yT$~28L$32FAJuCLx9fRwkxa
zra-oZm4U&%ub#J1H00)|WTsW(*06rX$26b@NstY}`DrEPiAAXljw$&`sS2LCiRr09
Xsfj6-g(p)%S&YHc)z4*}Q$iB}R=k^L

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_home.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_home.png
deleted file mode 100644
index 7c25fc510d5b124dc9b6460fdee3a58b02b90095..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1169
zcmeAS@N?(olHy`uVBq!ia0vp^Vj#@H1|*Mc$*~4fEa{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJcn%7)lKo7+xhXFj&oCU=S~uvn$XBD8ZKG?e4<x9|RZdT|OBo
z!d~L(>&kwggIQ4DLaTY@K?Vlq0#6sm5R22Tq23<RfdX@<9|<dYs3sT{5PeA}<c{dC
zgTB{ww>;RC;1&Lk<?*sD0wPOh^}6l4IF<Wos{+dr{aB99trt@k|4^L2OhLu0bAQb&
zmt?EwmGQr7W_>%9nV0@-j&=FFGm|~GdM%wKWz`m!9PF&0bZT4l^l2rPm7YxH63>!0
z{$M!}cOzy0w-5DQUH944Zv8Cp6--TG*$^+hkB#^F`W@eX%@M6z>%%jBUD&z+4VOzV
zx9}g3GqZ5%2`yMR-8DG)PhHBNv?YE0{rmNFbxS{1<(SQuXS$)Ur&o6HxM61D3H4sK
z%=Q2MI@Gpp+t&8O$?Z;7Qj$~9DKk5}b#Hoa-@ffEBP~AXdzS83P2V1YO*d}e{=H_-
zo3h<YKYuRnG@jmQo6{A4WEtyr&yzC$B|gZn3zvUYR#mktC_Fs8d&(TY<$fo(?Atfb
zM=kj0LD6{K^^+%077hGtr<k+AN6q<7!;bbq4z}j}hc;GLMmu8kq$DJET%7gy?_U#Z
zYwwdOL4IBZTrb4x9;}MdbDwhlx#sM%c1g)^9zA;0e*Ss(lh=V7B9|Us@Z#QAV6o=*
z{rl?s@89RpGl@9O<ojrr;tNf=hVS>6EnmJ`Tuf|2tIPk$njKsA?C~)+Hop46i8<=R
z6ys;R?3yS3F6@o}m8T%k;QOg+uc)iJnb{MGBTdYDCJR*4WqREv#u{7KZB(u(D=X8V
z>h(}8=;%-J=2nR#M$hebF-g^QKa0?Dds1N0F?(N||Ic&hY_7lR{lPco_?AoMtcD$_
z=dyXYvMYA)-ksgn-oEnAg-(}4ic!b5Zr;53%l0Lr;l5fmyF65ym}4Gr@kUOrI8-uw
z_G}Y-`}?QV|B1*;&Ccrj;^e}6)KAHbS<k*oJB#0UQ-sdbmydm_TMH&_eqm{2<Dz}<
zgv8pif`SI0Y60$Z@80FDH!8g_h1uHLdg?W!58C}5f@dFe^@Q^X+xv(fZm@m4bcfv}
zk7i~)mNj9ouP#3RxKPq;wy)s&xcK=02ljSs5;=NZ`#=FVOUv30P#`Foh}c#>JY_S_
z#L7zR`UKxeck}Ac3IAwyzoH*y$eqA1UDM&HV*v`y>(}nwky*QL-K85hW<2>=G3CwI
z+}vD#Hg@)SA79^6A3wh`kZKMGkm|?RuHL)nr>m=*Vj}f%Q_#z4`%|-|lLWZ=cD(w^
z{-C0LP1?gfalq`TTH+c}l9E`GYL#4+3Zxi}3=B<m4J>pGj6)2~txS!qj16@S%&iOz
zo*Vk!LeY?$pOTqYiKf8>sK*SVVH5MU*FX)DARB`7(@M${i&7aJQ}UBi6+Ckj(^G>|
W6H_V+Po{#(2?kGBKbLh*2~7Z^cJfC6

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_menu.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_menu.png
deleted file mode 100644
index 35e7af45033225f886c2779d956d7d26e36844e2..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 588
zcmV-S0<-;zP)<h;3K|Lk000e1NJLTq000R9000;W1^@s6C>z%<0006LNkl<Zc$|$=
zORG{*6kgkVJoj=_FLa}zfpQxZ2{{QA5*&!)%t6g+CN{}YL6boH1A>hM=Qa?ec{mVf
zil8`%20rqUiulO)vu_>sXrnstopsJ$-(G8f-(D1t$7#FWDws~EVzF3=;c%#~DbL}D
zlZaxo*$|-V_xrS5E@?iW?})u#k0z4|jmKjd@d{DQW;5z^Iy(Ya;Dv6tdj}Q1qFQaW
zT7BGi5RFDdX(#Q^^A2$h;!mL8Y&IY7i5h;L@lUy2eu+2*exv%2SS)4)kp_c-P!;HO
zy4#sd=0m++|B^@~USNqk2&>gfluRZSqS0uSB}ux4<dt5pzciUllHG16i^X!ZfOkQ*
zHkZq3*Xy+eAylbUj$ZxqffB){jYgw$e21|!1q)ssl+|iAQq{r4*N7XS3vvr;AAn3~
zeYBv}YP~^R0&OIIrPJw0Y%;niB)&6pxm@?F)oK)NGudqR?ZE=4)A`r&w7@lR!?pou
zYNp+8s}{iJ3%}ogna}5CpU+1QheNr1)hE9B6VFaJlQJ(Xvrs4q9M}hCpP}m6p*kP_
z)Pm=Tb6^JIcUW+j2|P;bsNhQ8?=7f+)GHQ?Pf%HzQq_V`DD)7A{DwrMR4RRfrVADp
z4u^LN-EOzwMYGv_<MDW&8VrVe?2~FiG#Vw$4+Vokjm>70*)OlxD@P&`kxHc~5D5I=
a5c~mywcgDJmZZ7>0000<MNUMnLSTZNxC@a0

diff --git a/packages/SystemUI/res/drawable-mdpi/ic_sysbar_recent.png b/packages/SystemUI/res/drawable-mdpi/ic_sysbar_recent.png
deleted file mode 100644
index 1ee9cf5f352d990d0a86b199ed9ac7b1ea655cf0..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 703
zcmeAS@N?(olHy`uVBq!ia0vp^Vj#@H1|*Mc$*~4fEa{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJcn%7)lKo7+xhXFj&oCU=S~uvn$XBD8ZKG?e4<x9|RZdT|OBo
z!d~L(>&kwggIUl(+I8PGT?Pimd7dtgAr`0KPPNZI6d-bRerE|U>q2kq9XralhGf{g
z?)tL$N9CHOK>-U(F5h+ac-bBx6SC#!YTM_9@f~YdZrt4H?DNiYfBEDGwOPCGuIllc
z@YjFprZw{~Y>D`?pnUVq7dGdn>^tXFxvxRWbJ86d<usMqn>JnGGHKekfPsr!Yr+|h
zxnVxvwfd5!S8Lt>{=VRF|DqSgMl<*LF2DR;Y0-4aw37<mKB6p*vTX}zoqxVv!%bt~
zqpNd6S6?kYy-DWJJ?(2R7D5!A5!n-=!{N8#R`(vMYy*iWbtXWma3fC1oe4J6*!qtr
z?~YqPJ!|W&xQ%Z7dnf&rp7VCc?YGa$&fE%=oqs_61K$qC2Yn5vcjSBin7$-Ttib(1
zudG3eRo}w&%O7*hPQRUDdU<0?lF^Av32PQu$LUS~J|}2~pWGLfXU#B2{ww|J^Wtk&
z`0A^#nA=R*yGr6+zO0-0_1E8jPYW!r_&l}nvzk2n?6cC{ck6PtM(KSC2+%V=Gt1FG
ztt|W2MZ@UJ_x8NrwesX=o4xN7BWC}7zo2J&<YC3n(zCwrxIN*b)Dd9hsg}4#l%yn<
zq*^5xr2;7iBLhQIT>}eU1LF`wb1PFLD`P`l19K|_gXf06w@@_X=BH$)RibGyv9K~S
zhiG`etN%1mgCxj?;QX|b^2DN42FH~Aq*MjZ+{E<Mpwz^a%EFVWpj5@+>FVdQ&MBb@
E04ozLMF0Q*

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back.png
deleted file mode 100644
index 987aac50d810a3ae4817f74b96d0187cec3edb21..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1933
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
Tami&o00000NkvXXu0mjfioAsT

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back_ime.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_back_ime.png
deleted file mode 100644
index 433e5a74d3f6b4e296c234380bbee33d3155666d..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1864
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
C$UqkW

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_docked.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_docked.png
deleted file mode 100755
index 73ddde86cda468d9f06315fe663b0329c82cd974..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1346
zcmeAS@N?(olHy`uVBq!ia0vp^Iv~u!1|;QLq8Nb`OS+@4BLl<6e(pbstU$g(vPY0F
z14ES>14Ba#1H&(%P{RubhEf9thF1v;3|2E37{m+a><Y92O0Xq)ySp&_2f+n<mrn+Y
za29w(76WbY24Tjfw$oMu1=&kHeO=ifFtc#!nr6nh?+04S<LTlU5^?x##94irM45S!
zYx+CFG)2AVhV9aEbvEUAcqL=jgdhA@R=!;5*`HM#Vww@0xn+@WRcS%NMo#xv7bb^9
zd=xyWWEXzpow#-Fy^qmz&9?4-bH>E??<Dp2XU^?;|M^V*^S`w`$763T{b|1bdNr4$
zz@bKtsRu1A<^SCJ_;I6#h;skzp9|DZW(X~`De3s*<G;YurqY7#_*Vzx3mi7#61_)`
zS|ryTVy>J~zB6Xd-MsYr?nsM`$&R+43upHC^&NUC|NL)dcujplvaN3kW8Q(z&ihkY
z9xLb_({%Wt{HdtI;o$Gzzx6#fxVygp<@03A&78LfIrx&z*REY#y2-PmNZj|Im8Ip)
z+>H@-XU?4Ya*A`CTJ-Ef4@+}%^Z2>$1?IkK^-~)@>&5h$NbqDz1V3R}yD~OD{{57q
zyxiPaj}6Ve+S=Org){TBvv-FD2Ny5hwk^zThR-sVW1Nk#MI7HMcg$96XO$0aHa@v8
z^Z#;|$Fg;r%O6}fu{@NuHA~=I%E5Q<*0E)0c^0(iG?kZ?Suy$XT|CU!zSvac;67f3
zyj^eKzCAB2EG%hZ^2nUoEz%)da{9DsCGG9)e}m3(bBfie@l7+j%k|jfRAnIlW`%dE
z8oBp`Pfb1|xF%ua5@`vEiiVhX({z?h>x}8C&d7LS$9e6?T^0{Mosy$7&ptbTgCp!s
znsot#j26$a#B!^-*B(B6sD44<{^iS$?R%a*c~Wrn=+QYBGkOkXW(5UZdVA;2o!u7t
zK~gtw-gNEJwzRYqzq9MhmoGQ|{Hf8?*MFaLaP{idNk{vuB5F)GZQ2y1rLAqOt)=zF
zYw?~vG4Y|HQ#l*2OMd_HV@FzYa<jCg<VR`YqvdVK+7B=lFx+UUZB0~O$NI?bYSFSl
zwxq|hcV7I6p50ey%)7+(@%h7RvY*<>`5XI|aA~!hJ`%aGYAeUVGMN(}Ww&%l-1;y@
zuSM#p66@NxlZx0v`8d*-JlnZ*XI;#`(Ae16u&Agif4>c;8@DCa)!8k%^2ht*<~@7<
zuucC7bfZg8_)``abtAtLnNuPkI5|1z#4Nl1TA%xeJ(ru?B-fmhk}Z#9+spFv^?TlN
zOP*Mf(<AcaoyCinQ(svex$(YickM>|C4J64y(<>%OFS4SQ^)cv^_cpR2jw1NlT~hn
z^RvshU(EP-uW&`?bD)N#!$})$l=*iv@_#nre!+FvH703UbWBW*lz|ba`c%R7mtW>7
znf6^4Uj1*U=+cAJw`|$M)2XI6AtTq*vokR#XH98Y*|vVWJA1<=_V#ek(QR#QwY(r8
z9gySfeE6mM?<-fXSo|qze*ROXXH~-vp~R1@tgH`9OG{<k{x4!@XWx18VqjiYR+srq
zpFm$<--{BVjE`Tvetmh;<sC0yzWjXjg!gaxx9q;mZz9E9rfmim6{;n!5hW>!C8<`)
zMX5lF!N|bSOxM6z*T5vi(7?*X)XEgdwy-iVxcAlb7K(=4{FKbJO57UOulSe-)F276
tAviy+q&%@GmBBG3KPgqgGdD3kH7GSPrLyp3DyU#%@O1TaS?83{1OQ~)N(2A^

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_home.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_home.png
deleted file mode 100644
index 0e2a14d3b54b015006897989e479cd7ccbf5185e..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2470
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

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_menu.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_menu.png
deleted file mode 100644
index 69a018d190e3c5426aba8cbf5fc134a8355f25dc..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1243
zcmV<11SI>3P)<h;3K|Lk000e1NJLTq000dD001lq1^@s6z8f;{000D{Nkl<Zc$}S8
zTS#0-7@j%j?4^5&yXvlMG|^&AyyQg+B|ccSlt>694}vd+#D~H{snDW=)Iv$24?buK
zh!m7UUlLUCLamBWLL?z1s7OR<1dVI9@y70U*ZaNSf6koax~VDjz{kv)^M5n{%zWQ}
z82i7^!omWptgKY~p-_lLqfs7-L^xVDGc%)(FD)&dCT(wTtEA)OV+mjz8yjqWeVwhY
zuBu~ob#-bCeN&&cwKaBda6mJ18YBdRLHpw3qJ4C9R1ssGGB8Ng+1c6QM@L5tDftc$
z4}ZbfJON`*u)=2)gFeSZ28nNNZSnc}c{d1yc;5k*1R@B2gS}l7D@rN}feJ{phr1YD
z2Nr?9fVZL_+uz@RK(T>9z#y5*%gbr=_YklP1O(x&AcwH$=LqFpU0oU}7K<r9pN}ms
zFMmTTA)SD}5~YSVjD7viIhUK8n`M>M+uJKS91aBoS9f=JUs5_iP!Lvt==k{f9fZoQ
zt*x?tO*}t8--<SAXlUs3&CShc2wbB>*xTECg{$}x-!jc+v#qSGOiRz@a&a`K<mBX3
zwC5`-Dn9P)?7Y+0*Y`zZW8-y<T~HLoXR%m5paoQtBuR|&Mc3x_dedlDARX`l86J-(
zLzd-p=qpyMl^ZhR+CxNZT3T9CUS6K3prF8$m6hejDmKallb;Y09{NCJg#tw@8EKvM
zl$4Y(zu(WRtE&lTOwGBfXp#xEMWU5STDoj-nreS)YKo1FjA$fX*<=U39}k)ks^_z_
zv#KME(~A#+WNzYO?*l(WVqb#fCX<514QotKPc!&NH6Miey-)-p0&Igg3<r1-$I;gg
z1h+0XG&GRS$v3NU>JAF=Zb5rZZEbC|XH5}E$22%NNW%S=0uodn6e@pWx7&GlcekcJ
zc*z7!v2Zy2-B~20{S>N@o0^(55;iH9mX@-KiHTc!dZch5C~UHU0&}0v3@K_POu&na
zi%I1!Oz;ze{uYN2A_7kDQGI=VK~7GNrKYCFum(#>Nijo=$>?Se4-flsFTbMBJ)E4J
zyjN9KRfO?W7}aLT2|iI5G?`2efRue6xCC5bLh(+g)6Ei9j$nFGa6<O%>})T*lYvXm
zOixe80=^`g8!-~_js{hQBiKwX1?;eeRVe-aDi;9~`!7p$baXImSnUgilhUaqOH{Jy
zf%Q)aq&Y}QZzbp}QRxz@k@0Sj^dgU&Cpo#$egg6hl(b8URxwDr(GdJ8RPb1ouub4k
zr1v%LjnbqzV-Hlz=jP@zG5Z9m0C*#mPO^$Y6}N@gPJRHwp<fAtQI-WUj0}FG*s-y(
z6KnMJ^w3^@c+U^u1ziD7S<@cOr?j`XliK~13ig!vtBGPSUAT0)rKLq9q44v<!a}9C
zw)R65mp{Y-=s&eE(hm*{4BRBO8GfRZ$<56rxwuj9uC1)BbR+OJuz(d_^!NAQ#Wz%E
zj|0&51Y1y}2y2k4FBcUReME4(-B<B`5kCnpv}ipgD~akD>Ub(1nDPSpgp1T-QXjPJ
z5EH*6Qp(qY867s8%}GFz6Z6q8MiDOf*C$@#@k&2M_y?&0?`AyHvk?FQ002ovPDHLk
FV1m?6I~4!`

diff --git a/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_recent.png b/packages/SystemUI/res/drawable-xhdpi/ic_sysbar_recent.png
deleted file mode 100644
index f810704c9aa7d406e065d76f63f5d293d9a8da91..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 840
zcmeAS@N?(olHy`uVBq!ia0vp^Iv~u!1|;QLq8Nb`OS+@4BLl<6e(pbstU$g(vPY0F
z14ES>14Ba#1H&(%P{RubhEf9thF1v;3|2E37{m+a><Y92O0Xq)ySp&_2f+n<mrn+Y
zu$OrHy0YKrU=}oxcHMVPmw|yv-P6S}B;xSf85{i$1&FkDU+qvUO;DJ4<m?AEl|w7^
z6J;Em%=q~HB<9YzA!R0J{>a;4YU@#st;#nvwm5jdwyZE%u~2Ns(WmpCoX_R@UK6j+
zdsvVqZqJ|7pZDDCm~htAeNJhFi<wYHutmFQq+1p9q^2j==7?+*w|iK9!um)P&vlXR
z8Q&ZIZj{CfHoX?iy`q?V!uU=#m+=V&F{Aqz8)IDd3m=;vS0JPA?|*v{n`{T?%XX2;
z5>|$~x3`^t*<$`*<lXn*tP$)VN`73Ko45UU#QN*`QoYCKu3EKSr`dL+xzPmIGmV+E
zS`QrB8~47c<>T^AC9(V4`WK%}`NVLocG|*ufhh{zGnk7a{B9WZXzy9CaVpMi_T5y;
zH=TPsH_kFh*(4b^alg5Kr1AQP=FhwiHJYv0*dsETyEswrOzTbq@n?r(W<WUqT_cvA
z4Ln{rgZJNx@F_Elv=e0%pB}PHOyUU_J+|=J>fGD>k3at4S@&7)_rrL(YGvlgBQX&_
zF8!7X^-Yhxk@2L}oJB@3+3NJ>CNBTBlV{UDA1S?SzN4-&w0X-RIW{3@<!90sGLt|2
zNlaK8)OjJ*=duawzMP8r!DlwKHP|=nEWVqk{h~qXX_2K-c!bD)xio9BZrQNaSA#=C
zyVtNc*l8*W-+b}m@XPY0mtU?|EK-^{;XznTg3TZ92^O1{%gyvT_CJ4F*lOP}&q*yo
zE4Qeg{>1m1@xdMi?wKd%l|DRrdbu3~=f$_P%x-fX1EwO?64!{5l*E!$tK_0oAjM#0
zU}&mqV4-VZ9Aap0Wol$)Y^ZBsZe?Kb+|c(HiiX_$l+3hBGz}&eRz~I!4exjLp9X4>
v1lbUrpH@<ySd_}(n3A8As^FQMn4TJxnwU~qcrq1~ycs-Q{an^LB{Ts5Vn<fO

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_back.png
deleted file mode 100644
index be03cbe16ddb34ada02651a4d822711a1eda94ef..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2934
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

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_back_ime.png b/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_back_ime.png
deleted file mode 100644
index b6b1615c5fa48b9036858b0850f548774523b769..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 2999
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

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_docked.png b/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_docked.png
deleted file mode 100755
index 1e84732f755ae30f77780ca46b3cffa195648c81..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1608
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
Do7LM(

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_home.png b/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_home.png
deleted file mode 100644
index f16aa4882dd4eb8b640ec13eafc67238721fe1f4..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 3748
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
O0000<MNUMnLSTXp%@tw*

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_menu.png b/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_menu.png
deleted file mode 100644
index a37ca5d7daf5f187aa6086c1386d0fd4f26d0435..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 847
zcmV-V1F-ywP)<h;3K|Lk000e1NJLTq000sI002S=1^@s6T0n-N0009PNkl<Zc%1E*
zKWI}?6vj{fm9(U73PNK_NLy`dZ5>>kba6DGtGYXzLD1PHAaoGi9IRw;am^4cB02;V
z$3PXb1maRc8%RQu{)y*{=Qg*m@7>&oMVCJKc-(u={k`|{?)y#-(fRS;kANtsNzGXU
zf~{8T=F!p7R=?l>rG#;()48KT&5(Ax{Xhpeg}4befb8z>-ZDXykmm)%WTe;Yy|n=$
z5Bak0#NC8gQ5%R7@?~8>2Z2866ErF7jzPG+G1m0q;o%P(2=b6G>w->Dyk4)rwgDjz
z`JSL$E_dVL;NYhTf;jSwAXchWDn0gsVIFbhnLv2vIo47(o4sAD)i#^W<`)2P#u)R6
zOWvv9NWHZfYnC<7T4AlS)>!LuUX}TI$%{GP+VMV;s~{=Oy2M(R#mh2IOMKdGA1PQ^
zf>W#utb{y5O3n$HpOU<=6QV#t3F5iO>Cc9n)-);eW0Gfd0Ua2TMM@DHfE)0yjP3le
zKLYH6>ueWKl-R4Uk&hodP_0(uyzq^O4{esq<rx}f{;V)3Z<%ZaaT@xy>&_1I?LW0K
zHg<z&WHSH#{r!(NAoitiWHA5OnVG*&khl4BZU1ChAitBzv-#COw*eu~2x6u9pU7tu
z1aY!4|4b%xeP?Iqy&DAch|>u3$6J6OFR-p`Y;4@+UHn1`W6Vo@*6pq7=8x^4WG&LL
zl3b->1zD8%jN3j^j|cjMB*ExaCAmz)3X+ic1i9>Nbyo@ogIARVk8n}Ws)CG@;ak&T
z&Pp;xJ}ZbDFrvwK1<`>DdR{@?kARE(0rvLx(%dq<WPOnD>?_8Yw*d~`5PQviUbyY?
z^=~6iqc&ruQd!_DdqD<59C==_!ROKKc3;^T8}i6hMfhq~f7p>n|D=UDvntYPG~U@j
zkVhu-FBXgUY(U5}f=F5j6U0{wk<aHJs`fz%<3geEh%8!&6IFzU?Ss-9`KThe-J~Sr
z$}5_dWIic*BdbVUuBh4vr8$|8lVuf&(y)DqYf^1Qlq{=Ah)%Z;dK(ckL7YHm`!KSN
Z_zil=+SpvAgQ5Tc002ovPDHLkV1o2GpWy%i

diff --git a/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_recent.png b/packages/SystemUI/res/drawable-xxhdpi/ic_sysbar_recent.png
deleted file mode 100644
index 109aeedab42ac917447485d75731bb19dc69efb0..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1063
zcmeAS@N?(olHy`uVBq!ia0vp^P9V&|1|%PcFuVX#Ea{HEjtmSN`?>!lvI6-E$sR$z
z3=CCj3=9n|3=F@3LJdH5r3MTPuM!v-tY$DUh!@P+6=(yLU`z6LcVYMsf(!O8p9~aX
zFY)wsWxvnCENCF@y6>7U0|PUgr;B4q#jUrq&t^#_inJY%54z%{+i}TvmY=iv-4sEl
zNRjPpMK<Z&6|Z8<+x246-JQA}9B~d4rd?|5`oi=@C~C{>tX&t5luVlSBmca$C3EoW
zV}%877VL3pMw0gPKmSO*Ge@Iq3K-;?&h_i9(6H;O_kEO{HupXsW0x+s)o(_vX+M4S
zzkMw1{xqw|<L8S{GDfej`S4G3l`xwhurJU`q_^ndr#Z&2%e_wB=@u1iW0@*$v(&_r
zclz-MHmPM-Cv4o%aWdu6;s-z4-X=Ya&lWS7AIP7-Q+)nZ*+zB!xIgo@-?CSFQ8oEe
zLFBArmyE|Bcbu?3l<(T|uR*fcZGMEy;V*2*|Ezft^lyhsY?_r>Vbjk!)fcKa=_DCQ
z)R=WAypCELR5|rz3LjVNq0cpT|IeIkVAM%qnw^>cLTN|)QdgO?9S1f>>xl8c*j8a8
zwb%c6wO^a$qXZ^t<5{jUy1I+*zdtV;s5gE7rCjs!va)vps&jZG4lpgNRNBE_?HW)Q
zv@UDwE#*J^qShuA_D^PHj+pVXOEO%$=}~M&;cRXmB`22-4najFmzE9zL83StypN>r
zjr0HXh|y>D$G_VA`^y=0&XnxDB<px{>z*Bdtq;vub2s*B-+_;dF2CF(!NbP?vZkML
z&KbFg115Xt?TJ14VuE2@N4D)hmOB&VjQ^U)?O4O1-+f?$`7`nKc1!6!taqmz<5_IS
zb@TOCyNJ3C(n`19mZj~wr+i{=*y^c~ZY}e2%y!$$@YP?al;-~YV&m(>LbnpmKP~$0
zW<O19rcY9tWt7&`xIVYVR=OolmW%(CRUW8dO53owJw$8kmF=_LL$5}c-0@j{x&LML
zFIn4}`!i;JyLy&UIpQEs*}KG#^??qo&5o*K-I@ynPRMt<JSy=FUFTl+ex2umRZX(C
z3&g){DX82Vrz*oIZO``NkD2banI0<JH2GuZ<!)$_e3QYjcY(S!S2VYmxrTYnJl?de
z-<~U|0)grNe@st}3;x{rV!a!fNmNT*BT7;dOH!?pi&B9UgOP!usjh*Au7Pogp}Cc*
zk(IHbu7SCgfx&Y_-&-gea`RI%(<;$4m{?dDnL{+Z-_?H_s6i5BLvVgtNqJ&XDuZK6
hep0G}XKrG8YEWuoN@d~6R8a0^@O1TaS?83{1OVn!wD<r3

diff --git a/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_back.png b/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_back.png
deleted file mode 100644
index a059704f9848f5e0018dceb35bd9829d94db66bc..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 3313
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
Bjrsrp

diff --git a/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_back_ime.png b/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_back_ime.png
deleted file mode 100644
index 8f00a64b36033a7085c218336a0d28aeb0d82495..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 3419
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

diff --git a/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_docked.png b/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_docked.png
deleted file mode 100755
index ee3ffde568bc31dd9409d6f957c76c92860c0f7c..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1096
zcmV-O1h@N%P)<h;3K|Lk000e1NJLTq003A3003AB1^@s6ag{JM00009a7bBm001mY
z001mY0i`{bsQ>@~8FWQhbW?9;ba!ELWdK2BZ(?O2No`?gWm08fWO;GPWjp`?1Jy}H
zK~#9!?3~R`6Hye$?|j+8iWJNk6J20JG~hzE#uW?pM128x0(}bI0Syl#dxclfCy=lp
z!O*nwVPQHSp2OVHnh=>=?wFb0|35jQi!$x~&6zXz&bj{z0YMN1K@bE%5ClQckgQSu
zDT<<&<2dW|a)qKb=8Sq2AJa5_XWMqKbihfHELxVeYXI1*KrhkQzmx{J-|x44-~VPH
z+~1Jt>V52aUg1o(RZd2u(bzB;F019b?uJTYs${T7b?Cd{fG@L{%EW#8JJ6ZI{5}tG
zvn-~VD9WxVU`HMl%G4-&^{W7Gfa_n}3ITQ%4(eQ6&@JovIMAbe%~zdg0xD6i=Htb@
z(BmYiF%zfCfG;Rc<P@fkkZs*JbKQVLic<-?t~akrmk7?<M3#y=X0R*2e|66o1i%0c
zzz_ffFaSdUT$72lHtp=}yjWOR=mkL#+IGFpU7DucbF}yN_L@46TeM~5Qv~!S_K}m9
zk7XawpN_~LY@tM;1_N-WBuS1<2d2tE32>*=`D{AiZnyiXEWq*V>gtC$j!#U5%VTE-
zWgMILMBJm8Yq#64qbNE~4HJ)fb93_zF?hl=DxtZx#F>7Z;t|FC^78V_gM))@6F~DA
zd8|BU8v8SfS&FHmSHGp0#gp>jO~Ym&d8dY3VtkYPA+omEwOt!$gbzt2>^!qA1Hf_<
zw@+~<<3bc{ExC#x#vgP#w7Q!R`uloS1AHOjp3Bz*q0qM*CHpLyxeT_UyVzF{a44bX
zja;Q>?kL%p4hDls$8mU{><X>Rr^dYg_UK->9fsjs-}lS65YSw3(Y9?PEd(_7CD(P8
zECfn3fy2YYX+z<%*!Z)1baXUb7GNs~f^}iIg<xi8W?htIA+V_ybp&>~vxR_Ha*<BJ
z{JvWR_*_8zz`ZG_ZmF&kVF~PTAC`8Hh9{pzK!2vUS}g=tk@vzvaI=L*(R!UC!Ed&b
z`<FtwW{>N7|Kgi@l>sx{o~ZW@_d8Vv980)$oz7|Z1D5%yv97f^)qP1oCD$AXfB_f+
zU;qYS2!JamSP1gf1uO*B5iA6#!2o=vU?C{iLXg5jP@aW=AK}GoYisXeAt=W}z$fA^
z#q8GB)+<vj1nqX4Ed+BSvr}l@RhsXM;OWUzgDnK}6c0tVg~2KcP9=+Z!v$}hniAu^
z@%qa9o5)&WU6I)c3jO-(C>DZP!ga-X+Xsfnom&WacmJ7C_+7YB0P#s_$}IK_fE-J>
zKSkEijYP>7g1lUKhAdQ42{{%c{HEGXvd@I_Fbo-jAP9mW=s)V000RI+E#mVc6!hEx
O0000<MNUMnLSTX&b^!+f

diff --git a/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_home.png b/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_home.png
deleted file mode 100644
index 194d39f9f13753931c6e669183334d00b41dd776..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 4428
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

diff --git a/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_recent.png b/packages/SystemUI/res/drawable-xxxhdpi/ic_sysbar_recent.png
deleted file mode 100644
index 046d850f3e0c395b4893b982d9282ae4fa395cc9..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1675
zcmaJ?4NMbf7(PW&QCy61$Y%6B-PDEa{j|OIItxMzTDANO-H^ex_q80*Ub!An@DFht
zQ(U&V;B-ussUdS4vL8?e)8fw@IK{;HOGGlA7!{DALnXqlK-FZ%OYXk!d%yR2-{<|y
zZH|pz8W`|K00cpShGqJAX*GG@iT=_zrwms}ORyMe5)*i<n9m3R3TJsUfDLxW2I2w3
z7UVR8#SrB8F_&l(O~#cP3vZV(ULBd+?v&6Fv^dP|WGq=ggw4RlIkZSm!%+n0SS^yQ
zG~!054rFl43I&i*7@cS-%(Bod5*7+Cc55U9b|5ma+n()kY1~?5*sey}d&L+6537h-
zT4aQj$ruakcmcplnG&_&Bmt{v8KG3FRAdND;)DXj35<}V1g%jhG&l~AK8WN^V6B>X
zeblHg>7+$6MA50iu>AadS-xDx3pR|PX&S>xj3iM>19cTRM8=IeT=RSu^uT2iIH$<*
z4%lmvG4r{i7Lk~agkX0Xjn51_T%(DSQii!1Cq~F{%x?F_HLUFt<H2(pFV%J>7B~SG
z4_th%V3F!!o#z8fxqG!EucE|86C-d^QJ8E!Z^^X-hiK4i5$Q(8a;%0Xl>j%JDO71z
zkf?&8Sd<|t1|?}iu3$+eO_EBVotNSDx`-%+J}N>^QWQZ%DkGw(@CaNlEow@xSEzhg
zgTo~<4h!)4<|N;v*zi|kH97$>A}=KJe73I(Vl#M=cV+NSSf?AVI=s-xSU87QxX4?m
zk+}6h;PL<)CGd85IMW*LB`j0~Wnoz}jsi-lKou-QqiR~NMCCMTma_^qX;E8|Q9S!X
z21hzol1Py_eS|bBic*+KLXE0agc&6Wl^Qhzl0g9jl(<E$#&L#5Fo`1OZJrmJ$tRLJ
z)VqB)8q(p}Z~=!jQGzr&_aEY)LeSW9gFZabef8e8rp)Q#vrhG1v3``f*E}}{t|)8?
z-@Ru-OmpSu9dC7%K3W*MWKZ(lO1@+6g2>{EZ7E9(m%AM`<-K8I0DZz*buT@?b6^t(
z8>v5SLwz>YIc{HV(uuUGFf=oLEbf7(7mb;U=j;rMjC;^}{le3zzpLxZnvXnAXnL)(
zIR9&9-w}DRU+@C5;=+vdnDN!@+A?B$j_ktvuEvO#klrpZ|6thmlF!KYaY<X#*v6pJ
zG#Pqq(&eP?`mL8XR=YQ?txIiQ)!)H*4!4|Lce{%;p1l}5em3FmoNP*p5|8C>ECeBI
zq4L22wV1l-rz%-;n#_Z4xpWPw{%4Pncb(eTy1x1VUjIddt?GVU6PWr{^TM&F!4HZ~
z-#oOn@s_7#=xM_z?`~T$v^+C!Rma0e57Jx5%uFwu<bnKFLjJ=6j!Q2Z^ETu+1@~Ue
zeIB&`4roO7KjnVI{tfnnwG|fwJ^k(FiT8Dx(}cRdb4^sa@vlI&@qACEpY6SWj|bIM
zL{|k>`la}F?Jr*QTl>k(+9$8SQ@wM|(d$DuCm-I?+W9y`@uX(8Y?F?1QLf!*tXb!`
zoIcVD*0e1pD^9DsMNQ1_H+s24ZCd-GHZ0|bi*eKAO20Y0eA~@VmaLyO#sACFlSo<B
znZc$N!5dmu->Qeo=U97Mg6>#P-8Iqo<|Osaod2_}=E}6T?9}bo>Nc-i|Kp94@4HHN
z%(`+QGz0&ouFI2nw`|wI)%_D1+M9Q#K8+v92)%u7_TFz*A#bMC*YE0opYG1S-B>cv
zm2k&8`I!5=;=TS!2iqfLd8-^{s5v?2*Q5`75Xj+NUOREHXTgjqxaY)*!2ldua{O$8
T_{XGa-rs{EGFo39kzV{Cq#1sO

diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java
index 1c452f90e6b..46a8595eaee 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/BaseStatusBar.java
@@ -100,6 +100,7 @@ import com.android.systemui.RecentsComponent;
 import com.android.systemui.SwipeHelper;
 import com.android.systemui.SystemUI;
 import com.android.systemui.assist.AssistManager;
+import com.android.systemui.navigation.Navigator;
 import com.android.systemui.recents.Recents;
 import com.android.systemui.slimrecent.RecentController;
 import com.android.systemui.statusbar.NotificationData.Entry;
@@ -186,9 +187,6 @@ public abstract class BaseStatusBar extends SystemUI implements
     protected int mLayoutDirection = -1; // invalid
     protected AccessibilityManager mAccessibilityManager;
 
-    // on-screen navigation buttons
-    protected NavigationBarView mNavigationBarView = null;
-
     protected boolean mDeviceInteractive;
 
     protected RecentController mSlimRecents;
@@ -1356,6 +1354,11 @@ public abstract class BaseStatusBar extends SystemUI implements
         mHandler.sendEmptyMessage(msg);
     }
 
+    @Override
+    public void screenPinningStateChanged(boolean enabled) {
+        Log.d(TAG, "StatusBar API screenPinningStateChanged = " + enabled);
+    }
+
     protected H createHandler() {
          return new H();
     }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java b/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java
index 419c91b11e3..f10f74f95d1 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/CommandQueue.java
@@ -77,6 +77,7 @@ public class CommandQueue extends IStatusBar.Stub {
     private static final int MSG_APP_TRANSITION_FINISHED       = 31 << MSG_SHIFT;
     private static final int MSG_DISMISS_KEYBOARD_SHORTCUTS    = 32 << MSG_SHIFT;
     private static final int MSG_HANDLE_SYSNAV_KEY             = 33 << MSG_SHIFT;
+    private static final int MSG_SCREEN_PINNING_STATE_CHANGED  = 34 << MSG_SHIFT;
 
     public static final int FLAG_EXCLUDE_NONE = 0;
     public static final int FLAG_EXCLUDE_SEARCH_PANEL = 1 << 0;
@@ -133,12 +134,21 @@ public class CommandQueue extends IStatusBar.Stub {
         void clickTile(ComponentName tile);
 
         void handleSystemNavigationKey(int arg1);
+        void screenPinningStateChanged(boolean enabled);
     }
 
     public CommandQueue(Callbacks callbacks) {
         mCallbacks = callbacks;
     }
 
+    public void screenPinningStateChanged(boolean enabled) {
+        synchronized (mLock) {
+            mHandler.removeMessages(MSG_SCREEN_PINNING_STATE_CHANGED);
+            mHandler.obtainMessage(MSG_SCREEN_PINNING_STATE_CHANGED,
+                    enabled ? 1 : 0, 0, null).sendToTarget();
+        }
+    }
+
     public void setIcon(String slot, StatusBarIcon icon) {
         synchronized (mLock) {
             // don't coalesce these
@@ -517,6 +527,9 @@ public class CommandQueue extends IStatusBar.Stub {
                 case MSG_HANDLE_SYSNAV_KEY:
                     mCallbacks.handleSystemNavigationKey(msg.arg1);
                     break;
+                case MSG_SCREEN_PINNING_STATE_CHANGED:
+                    mCallbacks.screenPinningStateChanged(msg.arg1 != 0);
+                    break;
             }
         }
     }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/car/CarBatteryController.java b/packages/SystemUI/src/com/android/systemui/statusbar/car/CarBatteryController.java
deleted file mode 100644
index 244536d22ef..00000000000
--- a/packages/SystemUI/src/com/android/systemui/statusbar/car/CarBatteryController.java
+++ /dev/null
@@ -1,276 +0,0 @@
-/*
- * Copyright (C) 2016 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.android.systemui.statusbar.car;
-
-import android.bluetooth.BluetoothAdapter;
-import android.bluetooth.BluetoothDevice;
-import android.bluetooth.BluetoothHeadsetClient;
-import android.bluetooth.BluetoothProfile;
-import android.bluetooth.BluetoothProfile.ServiceListener;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.os.Bundle;
-import android.util.Log;
-
-import com.android.systemui.statusbar.policy.BatteryController;
-
-import java.io.FileDescriptor;
-import java.io.PrintWriter;
-import java.util.ArrayList;
-
-/**
- * A {@link BatteryController} that is specific to the Auto use-case. For Auto, the battery icon
- * displays the battery status of a device that is connected via bluetooth and not the system's
- * battery.
- */
-public class CarBatteryController extends BroadcastReceiver implements BatteryController {
-    private static final String TAG = "CarBatteryController";
-
-    // According to the Bluetooth HFP 1.5 specification, battery levels are indicated by a
-    // value from 1-5, where these values represent the following:
-    // 0%% - 0, 1-25%% - 1, 26-50%% - 2, 51-75%% - 3, 76-99%% - 4, 100%% - 5
-    // As a result, set the level as the average within that range.
-    private static final int BATTERY_LEVEL_EMPTY = 0;
-    private static final int BATTERY_LEVEL_1 = 12;
-    private static final int BATTERY_LEVEL_2 = 28;
-    private static final int BATTERY_LEVEL_3 = 63;
-    private static final int BATTERY_LEVEL_4 = 87;
-    private static final int BATTERY_LEVEL_FULL = 100;
-
-    private static final int INVALID_BATTERY_LEVEL = -1;
-
-    private final Context mContext;
-
-    private final BluetoothAdapter mAdapter = BluetoothAdapter.getDefaultAdapter();
-    private BluetoothHeadsetClient mBluetoothHeadsetClient;
-
-    private final ArrayList<BatteryStateChangeCallback> mChangeCallbacks = new ArrayList<>();
-
-    private int mLevel;
-
-    /**
-     * An interface indicating the container of a View that will display what the information
-     * in the {@link CarBatteryController}.
-     */
-    public interface BatteryViewHandler {
-        void hideBatteryView();
-        void showBatteryView();
-    }
-
-    private BatteryViewHandler mBatteryViewHandler;
-
-    public CarBatteryController(Context context) {
-        mContext = context;
-
-        mAdapter.getProfileProxy(context.getApplicationContext(), mHfpServiceListener,
-                BluetoothProfile.HEADSET_CLIENT);
-    }
-
-    @Override
-    public void dump(FileDescriptor fd, PrintWriter pw, String[] args) {
-        pw.println("CarBatteryController state:");
-        pw.print("    mLevel=");
-        pw.println(mLevel);
-    }
-
-    @Override
-    public void setPowerSaveMode(boolean powerSave) {
-        // No-op. No power save mode for the car.
-    }
-
-    @Override
-    public void addStateChangedCallback(BatteryController.BatteryStateChangeCallback cb) {
-        mChangeCallbacks.add(cb);
-
-        // There is no way to know if the phone is plugged in or charging via bluetooth, so pass
-        // false for these values.
-        cb.onBatteryLevelChanged(mLevel, false /* pluggedIn */, false /* charging */);
-        cb.onPowerSaveChanged(false /* isPowerSave */);
-    }
-
-    @Override
-    public void removeStateChangedCallback(BatteryController.BatteryStateChangeCallback cb) {
-        mChangeCallbacks.remove(cb);
-    }
-
-    public void addBatteryViewHandler(BatteryViewHandler batteryViewHandler) {
-        mBatteryViewHandler = batteryViewHandler;
-    }
-
-    public void startListening() {
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(BluetoothHeadsetClient.ACTION_CONNECTION_STATE_CHANGED);
-        filter.addAction(BluetoothHeadsetClient.ACTION_AG_EVENT);
-        mContext.registerReceiver(this, filter);
-    }
-
-    public void stopListening() {
-        mContext.unregisterReceiver(this);
-    }
-
-    @Override
-    public void onReceive(Context context, Intent intent) {
-        String action = intent.getAction();
-
-        if (Log.isLoggable(TAG, Log.DEBUG)) {
-            Log.d(TAG, "onReceive(). action: " + action);
-        }
-
-        if (BluetoothHeadsetClient.ACTION_AG_EVENT.equals(action)) {
-            if (Log.isLoggable(TAG, Log.DEBUG)) {
-                Log.d(TAG, "Received ACTION_AG_EVENT");
-            }
-
-            int batteryLevel = intent.getIntExtra(BluetoothHeadsetClient.EXTRA_BATTERY_LEVEL,
-                    INVALID_BATTERY_LEVEL);
-
-            updateBatteryLevel(batteryLevel);
-
-            if (batteryLevel != INVALID_BATTERY_LEVEL && mBatteryViewHandler != null) {
-                mBatteryViewHandler.showBatteryView();
-            }
-        } else if (BluetoothHeadsetClient.ACTION_CONNECTION_STATE_CHANGED.equals(action)) {
-            int newState = intent.getIntExtra(BluetoothProfile.EXTRA_STATE, -1);
-
-            if (Log.isLoggable(TAG, Log.DEBUG)) {
-                int oldState = intent.getIntExtra(BluetoothProfile.EXTRA_PREVIOUS_STATE, -1);
-                Log.d(TAG, "ACTION_CONNECTION_STATE_CHANGED event: "
-                        + oldState + " -> " + newState);
-
-            }
-            BluetoothDevice device =
-                    (BluetoothDevice)intent.getExtra(BluetoothDevice.EXTRA_DEVICE);
-            updateBatteryIcon(device, newState);
-        }
-    }
-
-    /**
-     * Converts the battery level to a percentage that can be displayed on-screen and notifies
-     * any {@link BatteryStateChangeCallback}s of this.
-     */
-    private void updateBatteryLevel(int batteryLevel) {
-        if (batteryLevel == INVALID_BATTERY_LEVEL) {
-            if (Log.isLoggable(TAG, Log.DEBUG)) {
-                Log.d(TAG, "Battery level invalid. Ignoring.");
-            }
-            return;
-        }
-
-        // The battery level is a value between 0-5. Let the default battery level be 0.
-        switch (batteryLevel) {
-            case 5:
-                mLevel = BATTERY_LEVEL_FULL;
-                break;
-            case 4:
-                mLevel = BATTERY_LEVEL_4;
-                break;
-            case 3:
-                mLevel = BATTERY_LEVEL_3;
-                break;
-            case 2:
-                mLevel = BATTERY_LEVEL_2;
-                break;
-            case 1:
-                mLevel = BATTERY_LEVEL_1;
-                break;
-            case 0:
-            default:
-                mLevel = BATTERY_LEVEL_EMPTY;
-        }
-
-        if (Log.isLoggable(TAG, Log.DEBUG)) {
-            Log.d(TAG, "Battery level: " + batteryLevel + "; setting mLevel as: " + mLevel);
-        }
-
-        notifyBatteryLevelChanged();
-    }
-
-    /**
-     * Updates the display of the battery icon depending on the given connection state from the
-     * given {@link BluetoothDevice}.
-     */
-    private void updateBatteryIcon(BluetoothDevice device, int newState) {
-        if (newState == BluetoothProfile.STATE_CONNECTED) {
-            if (Log.isLoggable(TAG, Log.DEBUG)) {
-                Log.d(TAG, "Device connected");
-            }
-
-            if (mBatteryViewHandler != null) {
-                mBatteryViewHandler.showBatteryView();
-            }
-
-            if (mBluetoothHeadsetClient == null || device == null) {
-                return;
-            }
-
-            // Check if battery information is available and immediately update.
-            Bundle featuresBundle = mBluetoothHeadsetClient.getCurrentAgEvents(device);
-            if (featuresBundle == null) {
-                return;
-            }
-
-            int batteryLevel = featuresBundle.getInt(BluetoothHeadsetClient.EXTRA_BATTERY_LEVEL,
-                    INVALID_BATTERY_LEVEL);
-            updateBatteryLevel(batteryLevel);
-        } else if (newState == BluetoothProfile.STATE_DISCONNECTED) {
-            if (Log.isLoggable(TAG, Log.DEBUG)) {
-                Log.d(TAG, "Device disconnected");
-            }
-
-            if (mBatteryViewHandler != null) {
-                mBatteryViewHandler.hideBatteryView();
-            }
-        }
-    }
-
-    @Override
-    public void dispatchDemoCommand(String command, Bundle args) {
-        // TODO: Car demo mode.
-    }
-
-    @Override
-    public boolean isPowerSave() {
-        // Power save is not valid for the car, so always return false.
-        return false;
-    }
-
-    private void notifyBatteryLevelChanged() {
-        for (int i = 0, size = mChangeCallbacks.size(); i < size; i++) {
-            mChangeCallbacks.get(i)
-                    .onBatteryLevelChanged(mLevel, false /* pluggedIn */, false /* charging */);
-        }
-    }
-
-    private final ServiceListener mHfpServiceListener = new ServiceListener() {
-        @Override
-        public void onServiceConnected(int profile, BluetoothProfile proxy) {
-            if (profile == BluetoothProfile.HEADSET_CLIENT) {
-                mBluetoothHeadsetClient = (BluetoothHeadsetClient) proxy;
-            }
-        }
-
-        @Override
-        public void onServiceDisconnected(int profile) {
-            if (profile == BluetoothProfile.HEADSET_CLIENT) {
-                mBluetoothHeadsetClient = null;
-            }
-        }
-    };
-
-}
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/car/CarNavigationBarController.java b/packages/SystemUI/src/com/android/systemui/statusbar/car/CarNavigationBarController.java
deleted file mode 100644
index d9bf5390c8b..00000000000
--- a/packages/SystemUI/src/com/android/systemui/statusbar/car/CarNavigationBarController.java
+++ /dev/null
@@ -1,321 +0,0 @@
-/*
- * Copyright (C) 2015 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.android.systemui.statusbar.car;
-
-import android.content.Context;
-import android.content.Intent;
-import android.content.pm.PackageManager;
-import android.content.pm.ResolveInfo;
-import android.content.res.Resources;
-import android.content.res.TypedArray;
-import android.graphics.drawable.Drawable;
-import android.support.v4.util.SimpleArrayMap;
-import android.util.SparseBooleanArray;
-import android.view.View;
-import android.widget.LinearLayout;
-
-import com.android.systemui.R;
-import com.android.systemui.statusbar.phone.ActivityStarter;
-
-import java.net.URISyntaxException;
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-
-/**
- * A controller to populate data for CarNavigationBarView and handle user interactions.
- * <p/>
- * Each button inside the navigation bar is defined by data in arrays_car.xml. OEMs can customize
- * the navigation buttons by updating arrays_car.xml appropriately in an overlay.
- */
-class CarNavigationBarController {
-    private static final String EXTRA_FACET_CATEGORIES = "categories";
-    private static final String EXTRA_FACET_PACKAGES = "packages";
-    private static final String EXTRA_FACET_ID = "filter_id";
-    private static final String EXTRA_FACET_LAUNCH_PICKER = "launch_picker";
-
-    // Each facet of the navigation bar maps to a set of package names or categories defined in
-    // arrays_car.xml. Package names for a given facet are delimited by ";"
-    private static final String FACET_FILTER_DEMILITER = ";";
-
-    private Context mContext;
-    private CarNavigationBarView mNavBar;
-    private ActivityStarter mActivityStarter;
-
-    // Set of categories each facet will filter on.
-    private List<String[]> mFacetCategories = new ArrayList<String[]>();
-    // Set of package names each facet will filter on.
-    private List<String[]> mFacetPackages = new ArrayList<String[]>();
-
-    private SimpleArrayMap<String, Integer> mFacetCategoryMap
-            = new SimpleArrayMap<String, Integer>();
-    private SimpleArrayMap<String, Integer> mFacetPackageMap
-            = new SimpleArrayMap<String, Integer>();
-
-    private List<Intent> mIntents;
-    private List<Intent> mLongPressIntents;
-
-    private List<CarNavigationButton> mNavButtons = new ArrayList<CarNavigationButton>();
-
-    private int mCurrentFacetIndex;
-    private SparseBooleanArray mFacetHasMultipleAppsCache = new SparseBooleanArray();
-
-    public CarNavigationBarController(Context context,
-                                      CarNavigationBarView navBar,
-                                      ActivityStarter activityStarter) {
-        mContext = context;
-        mNavBar = navBar;
-        mActivityStarter = activityStarter;
-        bind();
-    }
-
-    public void taskChanged(String packageName) {
-        // If the package name belongs to a filter, then highlight appropriate button in
-        // the navigation bar.
-        if (mFacetPackageMap.containsKey(packageName)) {
-            setCurrentFacet(mFacetPackageMap.get(packageName));
-        }
-
-        // Check if the package matches any of the categories for the facets
-        String category = getPackageCategory(packageName);
-        if (category != null) {
-            setCurrentFacet(mFacetCategoryMap.get(category));
-        }
-    }
-
-    public void onPackageChange(String packageName) {
-        if (mFacetPackageMap.containsKey(packageName)) {
-            int index = mFacetPackageMap.get(packageName);
-            mFacetHasMultipleAppsCache.put(index, facetHasMultiplePackages(index));
-            // No need to check categories because we've already refreshed the cache.
-            return;
-        }
-
-        String category = getPackageCategory(packageName);
-        if (mFacetCategoryMap.containsKey(category)) {
-            int index = mFacetCategoryMap.get(category);
-            mFacetHasMultipleAppsCache.put(index, facetHasMultiplePackages(index));
-        }
-    }
-
-    private void bind() {
-        // Read up arrays_car.xml and populate the navigation bar here.
-        Resources r = mContext.getResources();
-        TypedArray icons = r.obtainTypedArray(R.array.car_facet_icons);
-        TypedArray intents = r.obtainTypedArray(R.array.car_facet_intent_uris);
-        TypedArray longpressIntents =
-                r.obtainTypedArray(R.array.car_facet_longpress_intent_uris);
-        TypedArray facetPackageNames = r.obtainTypedArray(R.array.car_facet_package_filters);
-
-        TypedArray facetCategories = r.obtainTypedArray(R.array.car_facet_category_filters);
-
-        if (icons.length() != intents.length()
-                || icons.length() != longpressIntents.length()
-                || icons.length() != facetPackageNames.length()
-                || icons.length() != facetCategories.length()) {
-            throw new RuntimeException("car_facet array lengths do not match");
-        }
-
-        mIntents = createEmptyIntentList(icons.length());
-        mLongPressIntents = createEmptyIntentList(icons.length());
-
-        for (int i = 0; i < icons.length(); i++) {
-            Drawable icon = icons.getDrawable(i);
-            try {
-                mIntents.set(i,
-                        Intent.parseUri(intents.getString(i), Intent.URI_INTENT_SCHEME));
-
-                String longpressUri = longpressIntents.getString(i);
-                boolean hasLongpress = !longpressUri.isEmpty();
-                if (hasLongpress) {
-                    mLongPressIntents.set(i,
-                            Intent.parseUri(longpressUri, Intent.URI_INTENT_SCHEME));
-                }
-
-                CarNavigationButton button = createNavButton(icon, i, hasLongpress);
-                mNavButtons.add(button);
-                mNavBar.addButton(button,
-                        createNavButton(icon, i, hasLongpress) /* lightsOutButton */);
-
-                initFacetFilterMaps(i,
-                        facetPackageNames.getString(i).split(FACET_FILTER_DEMILITER),
-                        facetCategories.getString(i).split(FACET_FILTER_DEMILITER));
-                        mFacetHasMultipleAppsCache.put(i, facetHasMultiplePackages(i));
-            } catch (URISyntaxException e) {
-                throw new RuntimeException("Malformed intent uri", e);
-            }
-        }
-    }
-
-    private void initFacetFilterMaps(int id, String[] packageNames, String[] categories) {
-        mFacetCategories.add(categories);
-        for (int i = 0; i < categories.length; i++) {
-            mFacetCategoryMap.put(categories[i], id);
-        }
-
-        mFacetPackages.add(packageNames);
-        for (int i = 0; i < packageNames.length; i++) {
-            mFacetPackageMap.put(packageNames[i], id);
-        }
-    }
-
-    private String getPackageCategory(String packageName) {
-        PackageManager pm = mContext.getPackageManager();
-        int size = mFacetCategories.size();
-        // For each facet, check if the given package name matches one of its categories
-        for (int i = 0; i < size; i++) {
-            String[] categories = mFacetCategories.get(i);
-            for (int j = 0; j < categories.length; j++) {
-                String category = categories[j];
-                Intent intent = new Intent();
-                intent.setPackage(packageName);
-                intent.setAction(Intent.ACTION_MAIN);
-                intent.addCategory(category);
-                List<ResolveInfo> list = pm.queryIntentActivities(intent, 0);
-                if (list.size() > 0) {
-                    // Cache this package name into facetPackageMap, so we won't have to query
-                    // all categories next time this package name shows up.
-                    mFacetPackageMap.put(packageName, mFacetCategoryMap.get(category));
-                    return category;
-                }
-            }
-        }
-        return null;
-    }
-
-    /**
-     * Helper method to check if a given facet has multiple packages associated with it.
-     * This can be resource defined package names or package names filtered by facet category.
-     */
-    private boolean facetHasMultiplePackages(int index) {
-        PackageManager pm = mContext.getPackageManager();
-
-        // Check if the packages defined for the filter actually exists on the device
-        String[] packages = mFacetPackages.get(index);
-        if (packages.length > 1) {
-            int count = 0;
-            for (int i = 0; i < packages.length; i++) {
-                count += pm.getLaunchIntentForPackage(packages[i]) != null ? 1 : 0;
-                if (count > 1) {
-                    return true;
-                }
-            }
-        }
-
-        // If there weren't multiple packages defined for the facet, check the categories
-        // and see if they resolve to multiple package names
-        String categories[] = mFacetCategories.get(index);
-
-        int count = 0;
-        for (int i = 0; i < categories.length; i++) {
-            String category = categories[i];
-            Intent intent = new Intent();
-            intent.setAction(Intent.ACTION_MAIN);
-            intent.addCategory(category);
-            count += pm.queryIntentActivities(intent, 0).size();
-            if (count > 1) {
-                return true;
-            }
-        }
-        return false;
-    }
-
-    private void setCurrentFacet(int index) {
-        if (index == mCurrentFacetIndex) {
-            return;
-        }
-
-        if (mNavButtons.get(mCurrentFacetIndex) != null) {
-            mNavButtons.get(mCurrentFacetIndex)
-                    .setSelected(false /* selected */, false /* showMoreIcon */);
-        }
-
-        if (mNavButtons.get(index) != null) {
-            mNavButtons.get(index).setSelected(true /* selected */,
-                    mFacetHasMultipleAppsCache.get(index)  /* showMoreIcon */);
-        }
-        mCurrentFacetIndex = index;
-    }
-
-    private CarNavigationButton createNavButton(Drawable icon, final int id,
-                                                boolean longClickEnabled) {
-        CarNavigationButton button = (CarNavigationButton) View.inflate(mContext,
-                R.layout.car_navigation_button, null);
-        button.setResources(icon);
-        LinearLayout.LayoutParams lp =
-                new LinearLayout.LayoutParams(0, LinearLayout.LayoutParams.MATCH_PARENT, 1);
-        button.setLayoutParams(lp);
-
-        button.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                onFacetClicked(id);
-            }
-        });
-
-        if (longClickEnabled) {
-            button.setLongClickable(true);
-            button.setOnLongClickListener(new View.OnLongClickListener() {
-                @Override
-                public boolean onLongClick(View v) {
-                    onFacetLongClicked(id);
-                    return true;
-                }
-            });
-        } else {
-            button.setLongClickable(false);
-        }
-
-        return button;
-    }
-
-    private void startActivity(Intent intent) {
-        if (mActivityStarter != null && intent != null) {
-            mActivityStarter.startActivity(intent, false);
-        }
-    }
-
-    private void onFacetClicked(int index) {
-        Intent intent = mIntents.get(index);
-        String packageName = intent.getPackage();
-
-        if (packageName == null) {
-            return;
-        }
-
-        intent.putExtra(EXTRA_FACET_CATEGORIES, mFacetCategories.get(index));
-        intent.putExtra(EXTRA_FACET_PACKAGES, mFacetPackages.get(index));
-        // The facet is identified by the index in which it was added to the nav bar.
-        // This value can be used to determine which facet was selected
-        intent.putExtra(EXTRA_FACET_ID, Integer.toString(index));
-
-        // If the current facet is clicked, we want to launch the picker by default
-        // rather than the "preferred/last run" app.
-        intent.putExtra(EXTRA_FACET_LAUNCH_PICKER, index == mCurrentFacetIndex);
-
-        setCurrentFacet(index);
-        startActivity(intent);
-    }
-
-    private void onFacetLongClicked(int index) {
-        setCurrentFacet(index);
-        startActivity(mLongPressIntents.get(index));
-    }
-
-    private List<Intent> createEmptyIntentList(int size) {
-        return Arrays.asList(new Intent[size]);
-    }
-}
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/car/CarNavigationBarView.java b/packages/SystemUI/src/com/android/systemui/statusbar/car/CarNavigationBarView.java
deleted file mode 100644
index d530759c7d3..00000000000
--- a/packages/SystemUI/src/com/android/systemui/statusbar/car/CarNavigationBarView.java
+++ /dev/null
@@ -1,75 +0,0 @@
-/*
- * Copyright (C) 2015 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.android.systemui.statusbar.car;
-
-import android.content.Context;
-import android.util.AttributeSet;
-import android.view.View;
-import android.widget.LinearLayout;
-
-import com.android.systemui.R;
-import com.android.systemui.statusbar.phone.NavigationBarView;
-
-/**
- * A custom navigation bar for the automotive use case.
- * <p>
- * The navigation bar in the automotive use case is more like a list of shortcuts, rendered
- * in a linear layout.
- */
-class CarNavigationBarView extends NavigationBarView {
-    private LinearLayout mNavButtons;
-    private LinearLayout mLightsOutButtons;
-
-    public CarNavigationBarView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-    }
-
-    @Override
-    public void onFinishInflate() {
-        mNavButtons = (LinearLayout) findViewById(R.id.nav_buttons);
-        mLightsOutButtons = (LinearLayout) findViewById(R.id.lights_out);
-    }
-
-    public void addButton(CarNavigationButton button, CarNavigationButton lightsOutButton){
-        mNavButtons.addView(button);
-        mLightsOutButtons.addView(lightsOutButton);
-    }
-
-    @Override
-    public void setDisabledFlags(int disabledFlags, boolean force) {
-        // TODO: Populate.
-    }
-
-    @Override
-    public void reorient() {
-        // We expect the car head unit to always have a fixed rotation so we ignore this. The super
-        // class implentation expects mRotatedViews to be populated, so if you call into it, there
-        // is a possibility of a NullPointerException.
-    }
-
-    @Override
-    public View getCurrentView() {
-        return this;
-    }
-
-    @Override
-    public void setNavigationIconHints(int hints, boolean force) {
-        // We do not need to set the navigation icon hints for a vehicle
-        // Calling setNavigationIconHints in the base class will result in a NPE as the car
-        // navigation bar does not have a back button.
-    }
-}
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/car/CarNavigationButton.java b/packages/SystemUI/src/com/android/systemui/statusbar/car/CarNavigationButton.java
deleted file mode 100644
index 59e42443466..00000000000
--- a/packages/SystemUI/src/com/android/systemui/statusbar/car/CarNavigationButton.java
+++ /dev/null
@@ -1,70 +0,0 @@
-/*
- * Copyright (C) 2015 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package com.android.systemui.statusbar.car;
-
-import android.content.Context;
-import android.graphics.drawable.Drawable;
-import android.util.AttributeSet;
-import android.widget.RelativeLayout;
-
-import com.android.keyguard.AlphaOptimizedImageButton;
-import com.android.systemui.R;
-
-/**
- * A wrapper view for a car navigation facet, which includes a button icon and a drop down icon.
- */
-public class CarNavigationButton extends RelativeLayout {
-    private static final float SELECTED_ALPHA = 1;
-    private static final float UNSELECTED_ALPHA = 0.7f;
-
-    private AlphaOptimizedImageButton mIcon;
-    private AlphaOptimizedImageButton mMoreIcon;
-
-    public CarNavigationButton(Context context, AttributeSet attrs) {
-        super(context, attrs);
-    }
-
-    @Override
-    public void onFinishInflate() {
-        super.onFinishInflate();
-        mIcon = (AlphaOptimizedImageButton) findViewById(R.id.car_nav_button_icon);
-        mIcon.setClickable(false);
-        mIcon.setBackgroundColor(android.R.color.transparent);
-        mIcon.setAlpha(UNSELECTED_ALPHA);
-
-        mMoreIcon = (AlphaOptimizedImageButton) findViewById(R.id.car_nav_button_more_icon);
-        mMoreIcon.setClickable(false);
-        mMoreIcon.setBackgroundColor(android.R.color.transparent);
-        mMoreIcon.setVisibility(INVISIBLE);
-        mMoreIcon.setImageDrawable(getContext().getDrawable(R.drawable.car_ic_arrow));
-        mMoreIcon.setAlpha(UNSELECTED_ALPHA);
-    }
-
-    public void setResources(Drawable icon) {
-        mIcon.setImageDrawable(icon);
-    }
-
-    public void setSelected(boolean selected, boolean showMoreIcon) {
-        if (selected) {
-            mMoreIcon.setVisibility(showMoreIcon ? VISIBLE : INVISIBLE);
-            mMoreIcon.setAlpha(SELECTED_ALPHA);
-            mIcon.setAlpha(SELECTED_ALPHA);
-        } else {
-            mMoreIcon.setVisibility(INVISIBLE);
-            mIcon.setAlpha(UNSELECTED_ALPHA);
-        }
-    }
-}
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/car/CarStatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/car/CarStatusBar.java
deleted file mode 100644
index 18fbd4c95c0..00000000000
--- a/packages/SystemUI/src/com/android/systemui/statusbar/car/CarStatusBar.java
+++ /dev/null
@@ -1,219 +0,0 @@
-/*
- * Copyright (C) 2015 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.android.systemui.statusbar.car;
-
-import android.app.ActivityManager;
-import android.content.BroadcastReceiver;
-import android.content.Context;
-import android.content.Intent;
-import android.content.IntentFilter;
-import android.graphics.PixelFormat;
-import android.util.Log;
-import android.view.View;
-import android.view.ViewGroup.LayoutParams;
-import android.view.ViewStub;
-import android.view.WindowManager;
-import com.android.systemui.BatteryMeterView;
-import com.android.systemui.R;
-import com.android.systemui.recents.Recents;
-import com.android.systemui.recents.misc.SystemServicesProxy;
-import com.android.systemui.recents.misc.SystemServicesProxy.TaskStackListener;
-import com.android.systemui.statusbar.StatusBarState;
-import com.android.systemui.statusbar.phone.PhoneStatusBar;
-import com.android.systemui.statusbar.phone.PhoneStatusBarView;
-import com.android.systemui.statusbar.policy.BatteryController;
-
-/**
- * A status bar (and navigation bar) tailored for the automotive use case.
- */
-public class CarStatusBar extends PhoneStatusBar implements
-        CarBatteryController.BatteryViewHandler {
-    private static final String TAG = "CarStatusBar";
-
-    private TaskStackListenerImpl mTaskStackListener;
-
-    private CarNavigationBarView mCarNavigationBar;
-    private CarNavigationBarController mController;
-    private FullscreenUserSwitcher mFullscreenUserSwitcher;
-
-    private CarBatteryController mCarBatteryController;
-    private BatteryMeterView mBatteryMeterView;
-
-    @Override
-    public void start() {
-        super.start();
-        mTaskStackListener = new TaskStackListenerImpl();
-        SystemServicesProxy.getInstance(mContext).registerTaskStackListener(mTaskStackListener);
-        registerPackageChangeReceivers();
-
-        mCarBatteryController.startListening();
-    }
-
-    @Override
-    public void destroy() {
-        mCarBatteryController.stopListening();
-        super.destroy();
-    }
-
-    @Override
-    protected PhoneStatusBarView makeStatusBarView() {
-        PhoneStatusBarView statusBarView = super.makeStatusBarView();
-
-        View batteryContainer = statusBarView.findViewById(R.id.battery_container);
-        batteryContainer.setVisibility(View.GONE);
-
-        mBatteryMeterView = ((BatteryMeterView) statusBarView.findViewById(R.id.battery));
-        mBatteryMeterView.setBatteryController(mCarBatteryController);
-
-        // By default, the BatteryMeterView should not be visible. It will be toggled visible
-        // when a device has connected by bluetooth.
-        mBatteryMeterView.setVisibility(View.GONE);
-
-        if (Log.isLoggable(TAG, Log.DEBUG)) {
-            Log.d(TAG, "makeStatusBarView(). mBatteryMeterView: " + mBatteryMeterView);
-        }
-
-        return statusBarView;
-    }
-
-    @Override
-    protected BatteryController createBatteryController() {
-        mCarBatteryController = new CarBatteryController(mContext);
-        mCarBatteryController.addBatteryViewHandler(this);
-        return mCarBatteryController;
-    }
-
-    @Override
-    protected void addNavigationBar() {
-        WindowManager.LayoutParams lp = new WindowManager.LayoutParams(
-                LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT,
-                WindowManager.LayoutParams.TYPE_NAVIGATION_BAR,
-                WindowManager.LayoutParams.FLAG_TOUCHABLE_WHEN_WAKING
-                        | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE
-                        | WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL
-                        | WindowManager.LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH
-                        | WindowManager.LayoutParams.FLAG_SPLIT_TOUCH
-                        | WindowManager.LayoutParams.FLAG_HARDWARE_ACCELERATED,
-                PixelFormat.TRANSLUCENT);
-        lp.setTitle("CarNavigationBar");
-        lp.windowAnimations = 0;
-        mWindowManager.addView(mNavigationBarView, lp);
-    }
-
-    @Override
-    protected void createNavigationBarView(Context context) {
-        if (mNavigationBarView != null) {
-            return;
-        }
-        mCarNavigationBar =
-                (CarNavigationBarView) View.inflate(context, R.layout.car_navigation_bar, null);
-        mController = new CarNavigationBarController(context, mCarNavigationBar,
-                this /* ActivityStarter*/);
-        mNavigationBarView = mCarNavigationBar;
-
-    }
-
-    @Override
-    public void showBatteryView() {
-        if (Log.isLoggable(TAG, Log.DEBUG)) {
-            Log.d(TAG, "showBatteryView(). mBatteryMeterView: " + mBatteryMeterView);
-        }
-
-        if (mBatteryMeterView != null) {
-            mBatteryMeterView.setVisibility(View.VISIBLE);
-        }
-    }
-
-    @Override
-    public void hideBatteryView() {
-        if (Log.isLoggable(TAG, Log.DEBUG)) {
-            Log.d(TAG, "hideBatteryView(). mBatteryMeterView: " + mBatteryMeterView);
-        }
-
-        if (mBatteryMeterView != null) {
-            mBatteryMeterView.setVisibility(View.GONE);
-        }
-    }
-
-    private BroadcastReceiver mPackageChangeReceiver = new BroadcastReceiver() {
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            if (intent.getData() == null || mController == null) {
-                return;
-            }
-            String packageName = intent.getData().getSchemeSpecificPart();
-            mController.onPackageChange(packageName);
-        }
-    };
-
-    private void registerPackageChangeReceivers() {
-        IntentFilter filter = new IntentFilter();
-        filter.addAction(Intent.ACTION_PACKAGE_ADDED);
-        filter.addAction(Intent.ACTION_PACKAGE_REMOVED);
-        filter.addDataScheme("package");
-        mContext.registerReceiver(mPackageChangeReceiver, filter);
-    }
-
-    @Override
-    protected void repositionNavigationBar() {
-        // The navigation bar for a vehicle will not need to be repositioned, as it is always
-        // set at the bottom.
-    }
-
-    /**
-     * An implementation of TaskStackListener, that listens for changes in the system task
-     * stack and notifies the navigation bar.
-     */
-    private class TaskStackListenerImpl extends TaskStackListener {
-        @Override
-        public void onTaskStackChanged() {
-            SystemServicesProxy ssp = Recents.getSystemServices();
-            ActivityManager.RunningTaskInfo runningTaskInfo = ssp.getRunningTask();
-            mController.taskChanged(runningTaskInfo.baseActivity.getPackageName());
-        }
-    }
-
-    @Override
-    protected void createUserSwitcher() {
-        if (mUserSwitcherController.useFullscreenUserSwitcher()) {
-            mFullscreenUserSwitcher = new FullscreenUserSwitcher(this, mUserSwitcherController,
-                    (ViewStub) mStatusBarWindow.findViewById(R.id.fullscreen_user_switcher_stub));
-        } else {
-            super.createUserSwitcher();
-        }
-    }
-
-    @Override
-    public void userSwitched(int newUserId) {
-        super.userSwitched(newUserId);
-        if (mFullscreenUserSwitcher != null) {
-            mFullscreenUserSwitcher.onUserSwitched(newUserId);
-        }
-    }
-
-    @Override
-    public void updateKeyguardState(boolean goingToFullShade, boolean fromShadeLocked) {
-        super.updateKeyguardState(goingToFullShade, fromShadeLocked);
-        if (mFullscreenUserSwitcher != null) {
-            if (mState == StatusBarState.FULLSCREEN_USER_SWITCHER) {
-                mFullscreenUserSwitcher.show();
-            } else {
-                mFullscreenUserSwitcher.hide();
-            }
-        }
-    }
-}
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/car/FullscreenUserSwitcher.java b/packages/SystemUI/src/com/android/systemui/statusbar/car/FullscreenUserSwitcher.java
deleted file mode 100644
index 8e6c15391f6..00000000000
--- a/packages/SystemUI/src/com/android/systemui/statusbar/car/FullscreenUserSwitcher.java
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Copyright (C) 2015 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License
- */
-
-package com.android.systemui.statusbar.car;
-
-import android.view.View;
-import android.view.ViewStub;
-
-import com.android.systemui.R;
-import com.android.systemui.statusbar.phone.PhoneStatusBar;
-import com.android.systemui.statusbar.policy.UserSwitcherController;
-
-/**
- * Manages the fullscreen user switcher.
- */
-public class FullscreenUserSwitcher {
-
-    private View mContainer;
-    private UserGridView mUserGridView;
-    private UserSwitcherController mUserSwitcherController;
-
-    public FullscreenUserSwitcher(PhoneStatusBar statusBar,
-            UserSwitcherController userSwitcherController,
-            ViewStub containerStub) {
-        mUserSwitcherController = userSwitcherController;
-        mContainer = containerStub.inflate();
-        mUserGridView = (UserGridView) mContainer.findViewById(R.id.user_grid);
-        mUserGridView.init(statusBar, mUserSwitcherController);
-    }
-
-    public void onUserSwitched(int newUserId) {
-        mUserGridView.onUserSwitched(newUserId);
-    }
-
-    public void show() {
-        mContainer.setVisibility(View.VISIBLE);
-    }
-
-    public void hide() {
-        mContainer.setVisibility(View.GONE);
-    }
-}
-
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/car/UserGridView.java b/packages/SystemUI/src/com/android/systemui/statusbar/car/UserGridView.java
deleted file mode 100644
index d90a21dec11..00000000000
--- a/packages/SystemUI/src/com/android/systemui/statusbar/car/UserGridView.java
+++ /dev/null
@@ -1,162 +0,0 @@
-/*
- * Copyright (C) 2015 The Android Open Source Project
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *      http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License
- */
-
-package com.android.systemui.statusbar.car;
-
-import android.content.Context;
-import android.os.UserHandle;
-import android.util.AttributeSet;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.AdapterView;
-import android.widget.GridView;
-import android.widget.ImageView;
-import android.widget.TextView;
-
-import com.android.systemui.R;
-import com.android.systemui.statusbar.UserUtil;
-import com.android.systemui.statusbar.phone.PhoneStatusBar;
-import com.android.systemui.statusbar.policy.UserSwitcherController;
-
-public class UserGridView extends GridView {
-
-    private PhoneStatusBar mStatusBar;
-    private UserSwitcherController mUserSwitcherController;
-    private Adapter mAdapter;
-    private int mPendingUserId = UserHandle.USER_NULL;
-
-    public UserGridView(Context context, AttributeSet attrs) {
-        super(context, attrs);
-    }
-
-    public void init(PhoneStatusBar statusBar, UserSwitcherController userSwitcherController) {
-        mStatusBar = statusBar;
-        mUserSwitcherController = userSwitcherController;
-        mAdapter = new Adapter(mUserSwitcherController);
-        setAdapter(mAdapter);
-
-        setOnItemClickListener(new OnItemClickListener() {
-            @Override
-            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
-                mPendingUserId = UserHandle.USER_NULL;
-                UserSwitcherController.UserRecord record = mAdapter.getItem(position);
-                if (record == null) {
-                    return;
-                }
-
-                if (record.isGuest || record.isAddUser) {
-                    mUserSwitcherController.switchTo(record);
-                    return;
-                }
-
-                if (record.isCurrent) {
-                    showOfflineAuthUi();
-                } else {
-                    mPendingUserId = record.info.id;
-                    mUserSwitcherController.switchTo(record);
-                }
-            }
-        });
-
-        setOnItemLongClickListener(new OnItemLongClickListener() {
-            @Override
-            public boolean onItemLongClick(AdapterView<?> parent,
-                    View view, int position, long id) {
-                UserSwitcherController.UserRecord record = mAdapter.getItem(position);
-                if (record == null || record.isAddUser) {
-                    return false;
-                }
-                if (record.isGuest) {
-                    if (record.isCurrent) {
-                        mUserSwitcherController.switchTo(record);
-                    }
-                    return true;
-                }
-
-                UserUtil.deleteUserWithPrompt(getContext(), record.info.id,
-                        mUserSwitcherController);
-                return true;
-            }
-        });
-    }
-
-    public void onUserSwitched(int newUserId) {
-        if (mPendingUserId == newUserId) {
-            // Bring up security view after user switch is completed.
-            post(new Runnable() {
-                @Override
-                public void run() {
-                    showOfflineAuthUi();
-                }
-            });
-        }
-        mPendingUserId = UserHandle.USER_NULL;
-    }
-
-    private void showOfflineAuthUi() {
-        // TODO: Show keyguard UI in-place.
-        mStatusBar.executeRunnableDismissingKeyguard(null, null, true, true, true);
-    }
-
-    @Override
-    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
-        int widthMode = MeasureSpec.getMode(widthMeasureSpec);
-        int widthSize = MeasureSpec.getSize(widthMeasureSpec);
-        if (widthMode == MeasureSpec.UNSPECIFIED) {
-            setNumColumns(AUTO_FIT);
-        } else {
-            int columnWidth = Math.max(1, getRequestedColumnWidth());
-            int itemCount = getAdapter() == null ? 0 : getAdapter().getCount();
-            int numColumns = Math.max(1, Math.min(itemCount, widthSize / columnWidth));
-            setNumColumns(numColumns);
-        }
-        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
-    }
-
-    private final class Adapter extends UserSwitcherController.BaseUserAdapter {
-        public Adapter(UserSwitcherController controller) {
-            super(controller);
-        }
-
-        @Override
-        public View getView(int position, View convertView, ViewGroup parent) {
-            if (convertView == null) {
-                LayoutInflater inflater = (LayoutInflater)getContext().getSystemService
-                        (Context.LAYOUT_INFLATER_SERVICE);
-                convertView = inflater.inflate(R.layout.car_fullscreen_user_pod, null);
-            }
-            UserSwitcherController.UserRecord record = getItem(position);
-
-            TextView nameView = (TextView) convertView.findViewById(R.id.user_name);
-            if (record != null) {
-                nameView.setText(getName(getContext(), record));
-                convertView.setActivated(record.isCurrent);
-            } else {
-                nameView.setText("Unknown");
-            }
-
-            ImageView iconView = (ImageView) convertView.findViewById(R.id.user_avatar);
-            if (record == null || record.picture == null) {
-                iconView.setImageDrawable(getDrawable(getContext(), record));
-            } else {
-                iconView.setImageBitmap(record.picture);
-            }
-
-            return convertView;
-        }
-    }
-}
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/BarTransitions.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/BarTransitions.java
index ed71e5708ce..c054b3ba897 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/BarTransitions.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/BarTransitions.java
@@ -35,6 +35,7 @@ import android.view.View;
 
 import com.android.systemui.Interpolators;
 import com.android.systemui.R;
+import com.android.systemui.navigation.NavigationController.NavbarOverlayResources;
 
 public class BarTransitions {
     private static final boolean DEBUG = false;
@@ -74,6 +75,8 @@ public class BarTransitions {
         return mMode;
     }
 
+    public void updateResources(NavbarOverlayResources resourceMap) {}
+
     /**
      * @param alwaysOpaque if {@code true}, the bar's background will always be opaque, regardless
      *         of what mode it is currently set to.
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
index 6b47e9d016e..e0bda82809f 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/PhoneStatusBar.java
@@ -96,6 +96,7 @@ import android.service.notification.NotificationListenerService;
 import android.service.notification.NotificationListenerService.RankingMap;
 import android.service.notification.StatusBarNotification;
 import android.telecom.TelecomManager;
+import android.text.TextUtils;
 import android.util.ArraySet;
 import android.util.DisplayMetrics;
 import android.util.EventLog;
@@ -126,6 +127,9 @@ import com.android.internal.logging.MetricsLogger;
 import com.android.internal.logging.MetricsProto.MetricsEvent;
 import com.android.internal.statusbar.NotificationVisibility;
 import com.android.internal.statusbar.StatusBarIcon;
+import com.android.internal.utils.du.ActionHandler;
+import com.android.internal.utils.du.DUPackageMonitor;
+import com.android.internal.utils.du.DUSystemReceiver;
 import com.android.keyguard.KeyguardHostView.OnDismissAction;
 import com.android.keyguard.KeyguardStatusView;
 import com.android.keyguard.KeyguardUpdateMonitor;
@@ -146,6 +150,8 @@ import com.android.systemui.classifier.FalsingManager;
 import com.android.systemui.doze.DozeHost;
 import com.android.systemui.doze.DozeLog;
 import com.android.systemui.keyguard.KeyguardViewMediator;
+import com.android.systemui.navigation.NavigationController;
+import com.android.systemui.navigation.Navigator;
 import com.android.systemui.qs.QSContainer;
 import com.android.systemui.omni.BatteryViewManager;
 import com.android.systemui.omni.StatusBarHeaderMachine;
@@ -453,6 +459,38 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
     private int mNavigationIconHints = 0;
     private HandlerThread mHandlerThread;
+    private NavigationController mNavigationController;
+    private DUPackageMonitor mPackageMonitor;
+
+    private View.OnTouchListener mUserAutoHideListener = new View.OnTouchListener() {
+        @Override
+        public boolean onTouch(View v, MotionEvent event) {
+            checkUserAutohide(v, event);
+            return false;
+        }
+    };
+
+    private Navigator.OnVerticalChangedListener mVerticalChangedListener = new Navigator.OnVerticalChangedListener() {
+        @Override
+        public void onVerticalChanged(boolean isVertical) {
+            if (mAssistManager != null) {
+                mAssistManager.onConfigurationChanged();
+            }
+            mNotificationPanel.setQsScrimEnabled(!isVertical);
+        }
+    };
+
+    private DUSystemReceiver mDUReceiver = new DUSystemReceiver() {
+        @Override
+        protected void onSecureReceive(Context context, Intent intent) {
+            String action = intent.getAction();
+            if (TextUtils.equals(ActionHandler.INTENT_TOGGLE_FLASHLIGHT, action)) {
+                if (mFlashlightController.isAvailable()) {
+                    mFlashlightController.setFlashlight(!mFlashlightController.isEnabled());
+                }
+            }
+        }
+    };
 
     Runnable mLongPressBrightnessChange = new Runnable() {
         @Override
@@ -848,6 +886,11 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         mScrimSrcModeEnabled = mContext.getResources().getBoolean(
                 R.bool.config_status_bar_scrim_behind_use_src);
 
+        // let's move it here and get it fired up nice and early and far away from statusbar recreation
+        if (mNavigationController == null) {
+            mNavigationController = new NavigationController(mContext, mContext.getResources(), this);
+        }
+
         super.start(); // calls createAndAddWindows()
 
         mMediaSessionManager
@@ -1201,6 +1244,11 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         context.registerReceiverAsUser(mDemoReceiver, UserHandle.ALL, demoFilter,
                 android.Manifest.permission.DUMP, null);
 
+        // flashlight action target for toggle
+        IntentFilter flashlightFilter = new IntentFilter();
+        flashlightFilter.addAction(ActionHandler.INTENT_TOGGLE_FLASHLIGHT);
+        context.registerReceiver(mDUReceiver, flashlightFilter);
+
         // listen for USER_SETUP_COMPLETE setting (per-user)
         resetUserSetupObserver();
 
@@ -1334,30 +1382,24 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     }
 
     protected void createNavigationBarView(Context context) {
-        inflateNavigationBarView(context);
-        mNavigationBarView.setDisabledFlags(mDisabled1);
-        mNavigationBarView.setComponents(mRecents, getComponent(Divider.class));
-        mNavigationBarView.setOnVerticalChangedListener(
-                new NavigationBarView.OnVerticalChangedListener() {
-            @Override
-            public void onVerticalChanged(boolean isVertical) {
-                if (mAssistManager != null) {
-                    mAssistManager.onConfigurationChanged();
-                }
-                mNotificationPanel.setQsScrimEnabled(!isVertical);
-            }
-        });
-        mNavigationBarView.setOnTouchListener(new View.OnTouchListener() {
-            @Override
-            public boolean onTouch(View v, MotionEvent event) {
-                checkUserAutohide(v, event);
-                return false;
-            }});
+        mNavigationController.recreateNavigationBar(context);
+        mNavigationController.getBar().setDisabledFlags(mDisabled1);
     }
 
     protected void inflateNavigationBarView(Context context) {
-        mNavigationBarView = (NavigationBarView) View.inflate(
-                context, R.layout.navigation_bar, null);
+    }
+
+    public void forceAddNavigationBar(boolean makeGone) {
+        // If we have no Navbar view and we should have one, create it
+        if (mNavigationController.getBar() != null) {
+            return;
+        }
+        createNavigationBarView(mContext);
+        if (makeGone) {
+            mNavigationController.getBar().getBaseView().setVisibility(View.GONE);
+        }
+        mNavigationController.getBar().notifyInflateFromUser();
+        addNavigationBar();
     }
 
     protected void initSignalCluster(View containerView) {
@@ -1586,8 +1628,8 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             MetricsLogger.action(mContext, MetricsEvent.ACTION_ASSIST_LONG_PRESS);
             mAssistManager.startAssist(new Bundle() /* args */);
             awakenDreams();
-            if (mNavigationBarView != null) {
-                mNavigationBarView.abortCurrentGesture();
+            if (mNavigationController.getBar() != null) {
+                mNavigationController.getBar().abortCurrentGesture();
             }
             return true;
         }
@@ -1637,67 +1679,33 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     }
 
     private void prepareNavigationBarView() {
-        mNavigationBarView.reorient();
-
-        ButtonDispatcher recentsButton = mNavigationBarView.getRecentsButton();
-        recentsButton.setOnClickListener(mRecentsClickListener);
-        recentsButton.setOnTouchListener(mRecentsPreloadOnTouchListener);
-        recentsButton.setLongClickable(true);
-        recentsButton.setOnLongClickListener(mRecentsLongClickListener);
-
-        ButtonDispatcher backButton = mNavigationBarView.getBackButton();
-        backButton.setLongClickable(true);
-        backButton.setOnLongClickListener(mLongPressBackListener);
-
-        ButtonDispatcher homeButton = mNavigationBarView.getHomeButton();
-        homeButton.setOnTouchListener(mHomeActionListener);
-        homeButton.setOnLongClickListener(mLongPressHomeListener);
-
+        mNavigationController.getBar().reorient();
+        mNavigationController.getBar().setListeners(mUserAutoHideListener, mLongPressBackListener);
+        mNavigationController.getBar().setOnVerticalChangedListener(mVerticalChangedListener);
         mAssistManager.onConfigurationChanged();
     }
 
     // For small-screen devices (read: phones) that lack hardware navigation buttons
     protected void addNavigationBar() {
-        if (DEBUG) Log.v(TAG, "addNavigationBar: about to add " + mNavigationBarView);
-        if (mNavigationBarView == null) return;
-
-        try {
-            WindowManagerGlobal.getWindowManagerService()
-                    .watchRotation(new IRotationWatcher.Stub() {
-                @Override
-                public void onRotationChanged(int rotation) throws RemoteException {
-                    // We need this to be scheduled as early as possible to beat the redrawing of
-                    // window in response to the orientation change.
-                    Message msg = Message.obtain(mHandler, () -> {
-                        if (mNavigationBarView != null
-                                && mNavigationBarView.needsReorient(rotation)) {
-                            repositionNavigationBar();
-                        }
-                    });
-                    msg.setAsynchronous(true);
-                    mHandler.sendMessageAtFrontOfQueue(msg);
-                }
-            });
-        } catch (RemoteException e) {
-            throw e.rethrowFromSystemServer();
-        }
+        if (DEBUG) Log.v(TAG, "addNavigationBar: about to add " + mNavigationController.getBar());
+        if (mNavigationController.getBar() == null) return;
 
         prepareNavigationBarView();
 
-        mWindowManager.addView(mNavigationBarView, getNavigationBarLayoutParams());
+        mWindowManager.addView(mNavigationController.getBar().getBaseView(), getNavigationBarLayoutParams());
     }
 
     protected void repositionNavigationBar() {
-        if (mNavigationBarView == null || !mNavigationBarView.isAttachedToWindow()) return;
+        if (mNavigationController.getBar() == null || !mNavigationController.getBar().getBaseView().isAttachedToWindow()) return;
 
         prepareNavigationBarView();
 
-        mWindowManager.updateViewLayout(mNavigationBarView, mNavigationBarView.getLayoutParams());
+        mWindowManager.updateViewLayout(mNavigationController.getBar().getBaseView(), getNavigationBarLayoutParams());
     }
 
     private void notifyNavigationBarScreenOn(boolean screenOn) {
-        if (mNavigationBarView == null) return;
-        mNavigationBarView.notifyScreenOn(screenOn);
+        if (mNavigationController.getBar() == null) return;
+        mNavigationController.getBar().notifyScreenOn(screenOn);
     }
 
     private WindowManager.LayoutParams getNavigationBarLayoutParams() {
@@ -1723,6 +1731,11 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
     }
 
     @Override
+    public void screenPinningStateChanged(boolean enabled) {
+        mNavigationController.screenPinningStateChanged(enabled);
+    }
+
+    @Override
     public void setIcon(String slot, StatusBarIcon icon) {
         mIconController.setIcon(slot, icon);
     }
@@ -1940,8 +1953,8 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
     @Override
     protected void refreshLayout(int layoutDirection) {
-        if (mNavigationBarView != null) {
-            mNavigationBarView.setLayoutDirection(layoutDirection);
+        if (mNavigationController.getBar() != null) {
+            mNavigationController.getBar().getBaseView().setLayoutDirection(layoutDirection);
         }
     }
 
@@ -2656,7 +2669,7 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                         | StatusBarManager.DISABLE_BACK
                         | StatusBarManager.DISABLE_SEARCH)) != 0) {
             // the nav bar will take care of these
-            if (mNavigationBarView != null) mNavigationBarView.setDisabledFlags(state1);
+            if (mNavigationController.getBar() != null) mNavigationController.getBar().setDisabledFlags(state1);
 
             if ((state1 & StatusBarManager.DISABLE_RECENT) != 0) {
                 // close recents if it's visible
@@ -3290,8 +3303,8 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
         mNavigationIconHints = hints;
 
-        if (mNavigationBarView != null) {
-            mNavigationBarView.setNavigationIconHints(hints);
+        if (mNavigationController.getBar() != null) {
+            mNavigationController.getBar().setNavigationIconHints(hints);
         }
         checkBarModes();
     }
@@ -3309,7 +3322,7 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                         1.0f /* speedUpFactor */);
             }
         }
-        if (mNavigationBarView != null
+        if (mNavigationController.getBar() != null
                 && window == StatusBarManager.WINDOW_NAVIGATION_BAR
                 && mNavigationBarWindowState != state) {
             mNavigationBarWindowState = state;
@@ -3370,8 +3383,8 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                     View.STATUS_BAR_TRANSPARENT);
 
             // update navigation bar mode
-            final int nbMode = mNavigationBarView == null ? -1 : computeBarMode(
-                    oldVal, newVal, mNavigationBarView.getBarTransitions(),
+            final int nbMode = mNavigationController.getBar() == null ? -1 : computeBarMode(
+                    oldVal, newVal, mNavigationController.getBar().getBarTransitions(),
                     View.NAVIGATION_BAR_TRANSIENT, View.NAVIGATION_BAR_TRANSLUCENT,
                     View.NAVIGATION_BAR_TRANSPARENT);
             sbModeChanged = sbMode != -1;
@@ -3433,9 +3446,9 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         if (mDemoMode) return;
         checkBarMode(mStatusBarMode, mStatusBarWindowState, mStatusBarView.getBarTransitions(),
                 mNoAnimationOnNextBarModeChange);
-        if (mNavigationBarView != null) {
+        if (mNavigationController.getBar() != null) {
             checkBarMode(mNavigationBarMode,
-                    mNavigationBarWindowState, mNavigationBarView.getBarTransitions(),
+                    mNavigationBarWindowState, mNavigationController.getBar().getBarTransitions(),
                     mNoAnimationOnNextBarModeChange);
         }
         mNoAnimationOnNextBarModeChange = false;
@@ -3454,8 +3467,8 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
     private void finishBarAnimations() {
         mStatusBarView.getBarTransitions().finishAnimations();
-        if (mNavigationBarView != null) {
-            mNavigationBarView.getBarTransitions().finishAnimations();
+        if (mNavigationController.getBar() != null) {
+            mNavigationController.getBar().getBarTransitions().finishAnimations();
         }
     }
 
@@ -3558,8 +3571,8 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         if (SPEW) {
             Log.d(TAG, (showMenu?"showing":"hiding") + " the MENU button");
         }
-        if (mNavigationBarView != null) {
-            mNavigationBarView.setMenuVisibility(showMenu);
+        if (mNavigationController.getBar() != null) {
+            mNavigationController.getBar().setMenuVisibility(showMenu);
         }
 
         // See above re: lights-out policy for legacy apps.
@@ -3615,19 +3628,19 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         pw.print("  mUseHeadsUp=");
         pw.println(mUseHeadsUp);
         dumpBarTransitions(pw, "mStatusBarView", mStatusBarView.getBarTransitions());
-        if (mNavigationBarView != null) {
+        if (mNavigationController.getBar() != null) {
             pw.print("  mNavigationBarWindowState=");
             pw.println(windowStateToString(mNavigationBarWindowState));
             pw.print("  mNavigationBarMode=");
             pw.println(BarTransitions.modeToString(mNavigationBarMode));
-            dumpBarTransitions(pw, "mNavigationBarView", mNavigationBarView.getBarTransitions());
+            dumpBarTransitions(pw, "mNavigationBarView", mNavigationController.getBar().getBarTransitions());
         }
 
         pw.print("  mNavigationBarView=");
-        if (mNavigationBarView == null) {
+        if (mNavigationController.getBar() == null) {
             pw.println("null");
         } else {
-            mNavigationBarView.dump(fd, pw, args);
+            mNavigationController.getBar().dump(fd, pw, args);
         }
 
         pw.print("  mMediaSessionManager=");
@@ -3960,7 +3973,9 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             Log.v(TAG, "configuration changed: " + mContext.getResources().getConfiguration());
         }
 
-        repositionNavigationBar();
+        if (!mNavigationController.onConfigurationChanged(newConfig)) {
+            repositionNavigationBar();
+        }
         updateRowStates();
         mScreenPinningRequest.onConfigurationChanged();
         mNetworkController.onConfigurationChanged();
@@ -4257,9 +4272,9 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             mWindowManager.removeViewImmediate(mStatusBarWindow);
             mStatusBarWindow = null;
         }
-        if (mNavigationBarView != null) {
-            mWindowManager.removeViewImmediate(mNavigationBarView);
-            mNavigationBarView = null;
+        if (mNavigationController.getBar() != null) {
+            mWindowManager.removeViewImmediate(mNavigationController.getBar().getBaseView());
+            mNavigationController.destroy();
         }
         if (mHandlerThread != null) {
             mHandlerThread.quitSafely();
@@ -4340,8 +4355,8 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
                 if (mStatusBarView != null) {
                     mStatusBarView.getBarTransitions().transitionTo(barMode, animate);
                 }
-                if (mNavigationBarView != null) {
-                    mNavigationBarView.getBarTransitions().transitionTo(barMode, animate);
+                if (mNavigationController.getBar() != null) {
+                    mNavigationController.getBar().getBarTransitions().transitionTo(barMode, animate);
                 }
             }
         }
@@ -4398,6 +4413,9 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             mDraggedDownRow = null;
         }
         mPendingRemoteInputView = null;
+        if (mNavigationController.getBar() != null) {
+            mNavigationController.getBar().setKeyguardShowing(true);
+        }
         mAssistManager.onLockscreenShown();
     }
 
@@ -4541,12 +4559,12 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
 
             // Disable layout transitions in navbar for this transition because the load is just
             // too heavy for the CPU and GPU on any device.
-            if (mNavigationBarView != null) {
-                mNavigationBarView.setLayoutTransitionsEnabled(false);
-                mNavigationBarView.postDelayed(new Runnable() {
+            if (mNavigationController.getBar() != null) {
+                mNavigationController.getBar().setLayoutTransitionsEnabled(false);
+                mNavigationController.getBar().getBaseView().postDelayed(new Runnable() {
                     @Override
                     public void run() {
-                        mNavigationBarView.setLayoutTransitionsEnabled(true);
+                        mNavigationController.getBar().setLayoutTransitionsEnabled(true);
                     }
                 }, delay + StackStateAnimator.ANIMATION_DURATION_GO_TO_FULL_SHADE);
             }
@@ -4569,6 +4587,10 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         mNotificationPanel.onAffordanceLaunchEnded();
         mNotificationPanel.animate().cancel();
         mNotificationPanel.setAlpha(1f);
+
+        if (mNavigationController.getBar() != null) {
+            mNavigationController.getBar().setKeyguardShowing(false);
+        }
         Trace.endSection();
         return staying;
     }
@@ -4793,10 +4815,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         mStackScroller.setActivatedChild(view);
     }
 
-    public ButtonDispatcher getHomeButton() {
-        return mNavigationBarView.getHomeButton();
-    }
-
     /**
      * @param state The {@link StatusBarState} to set.
      */
@@ -4886,8 +4904,8 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
         return getMaxKeyguardNotifications(false /* recompute */);
     }
 
-    public NavigationBarView getNavigationBarView() {
-        return mNavigationBarView;
+    public Navigator getNavigationBarView() {
+        return mNavigationController.getBar();
     }
 
     // ---------------------- DragDownHelper.OnDragDownListener ------------------------------------
@@ -5163,9 +5181,6 @@ public class PhoneStatusBar extends BaseStatusBar implements DemoMode,
             IActivityManager activityManager = ActivityManagerNative.getDefault();
             if (activityManager.isInLockTaskMode()) {
                 activityManager.stopSystemLockTaskMode();
-
-                // When exiting refresh disabled flags.
-                mNavigationBarView.setDisabledFlags(mDisabled1, true);
                 return true;
             }
         } catch (RemoteException e) {
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarKeyguardViewManager.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarKeyguardViewManager.java
index 664e1030d8a..a3a5815d3b8 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarKeyguardViewManager.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBarKeyguardViewManager.java
@@ -457,7 +457,7 @@ public class StatusBarKeyguardViewManager implements RemoteInputController.Callb
     private Runnable mMakeNavigationBarVisibleRunnable = new Runnable() {
         @Override
         public void run() {
-            mPhoneStatusBar.getNavigationBarView().setVisibility(View.VISIBLE);
+            mPhoneStatusBar.getNavigationBarView().getBaseView().setVisibility(View.VISIBLE);
         }
     };
 
@@ -493,7 +493,7 @@ public class StatusBarKeyguardViewManager implements RemoteInputController.Callb
                     }
                 } else {
                     mContainer.removeCallbacks(mMakeNavigationBarVisibleRunnable);
-                    mPhoneStatusBar.getNavigationBarView().setVisibility(View.GONE);
+                    mPhoneStatusBar.getNavigationBarView().getBaseView().setVisibility(View.GONE);
                 }
             }
         }
diff --git a/services/core/Android.mk b/services/core/Android.mk
index 32105429575..1573f620f45 100644
--- a/services/core/Android.mk
+++ b/services/core/Android.mk
@@ -17,7 +17,7 @@ LOCAL_SRC_FILES += \
 LOCAL_AIDL_INCLUDES += \
     system/netd/server/binder
 
-LOCAL_JAVA_LIBRARIES := services.net telephony-common
+LOCAL_JAVA_LIBRARIES := services.net telephony-common org.dirtyunicorns.utils
 LOCAL_STATIC_JAVA_LIBRARIES := tzdata_update
 LOCAL_PROTOC_OPTIMIZE_TYPE := nano
 
diff --git a/services/core/java/com/android/server/am/ActivityStackSupervisor.java b/services/core/java/com/android/server/am/ActivityStackSupervisor.java
index c6ab9186456..bb32b371d15 100644
--- a/services/core/java/com/android/server/am/ActivityStackSupervisor.java
+++ b/services/core/java/com/android/server/am/ActivityStackSupervisor.java
@@ -3951,6 +3951,7 @@ public final class ActivityStackSupervisor implements DisplayListener {
                             }
                             getStatusBarService().disable(flags, mToken,
                                     mService.mContext.getPackageName());
+                            getStatusBarService().screenPinningStateChanged(true);
                         }
                         mWindowManager.disableKeyguard(mToken, LOCK_TASK_TAG);
                         if (getDevicePolicyManager() != null) {
@@ -3967,6 +3968,7 @@ public final class ActivityStackSupervisor implements DisplayListener {
                         if (getStatusBarService() != null) {
                             getStatusBarService().disable(StatusBarManager.DISABLE_NONE, mToken,
                                     mService.mContext.getPackageName());
+                            getStatusBarService().screenPinningStateChanged(false);
                         }
                         mWindowManager.reenableKeyguard(mToken);
                         if (getDevicePolicyManager() != null) {
diff --git a/services/core/java/com/android/server/am/LockTaskNotify.java b/services/core/java/com/android/server/am/LockTaskNotify.java
index 3a24cc14f87..a689185bc7e 100644
--- a/services/core/java/com/android/server/am/LockTaskNotify.java
+++ b/services/core/java/com/android/server/am/LockTaskNotify.java
@@ -20,6 +20,7 @@ import android.app.ActivityManager;
 import android.content.Context;
 import android.os.Handler;
 import android.os.Message;
+import android.provider.Settings;
 import android.view.WindowManager;
 import android.view.accessibility.AccessibilityManager;
 import android.widget.Toast;
diff --git a/services/core/java/com/android/server/audio/AudioService.java b/services/core/java/com/android/server/audio/AudioService.java
index 8172d099701..19dbce594ae 100644
--- a/services/core/java/com/android/server/audio/AudioService.java
+++ b/services/core/java/com/android/server/audio/AudioService.java
@@ -599,6 +599,14 @@ public class AudioService extends IAudioService.Stub {
 
     private boolean mLinkNotificationWithVolume;
 
+            "android",
+            "com.android.systemui",
+            "com.android.keyguard",
+            "com.google.android.googlequicksearchbox"
+    };
+
+    private boolean mVisualizerLocked;
+
     ///////////////////////////////////////////////////////////////////////////
     // Construction
     ///////////////////////////////////////////////////////////////////////////
@@ -3553,6 +3561,25 @@ public class AudioService extends IAudioService.Stub {
         return (mMuteAffectedStreams & (1 << streamType)) != 0;
     }
 
+    /** @hide */
+    public boolean isVisualizerLocked(String callingPackage) {
+        boolean isSystem = false;
+        for (int i = 0; i < VISUALIZER_WHITELIST.length; i++) {
+            if (TextUtils.equals(callingPackage, VISUALIZER_WHITELIST[i])) {
+                isSystem = true;
+                break;
+            }
+        }
+        return !isSystem && mVisualizerLocked;
+    }
+
+    /** @hide */
+    public void setVisualizerLocked(boolean doLock) {
+        if (mVisualizerLocked != doLock) {
+            mVisualizerLocked = doLock;
+        }
+    }
+
     private void ensureValidDirection(int direction) {
         switch (direction) {
             case AudioManager.ADJUST_LOWER:
diff --git a/services/core/java/com/android/server/policy/PhoneWindowManager.java b/services/core/java/com/android/server/policy/PhoneWindowManager.java
index dee25c25f44..ec8da22ca85 100644
--- a/services/core/java/com/android/server/policy/PhoneWindowManager.java
+++ b/services/core/java/com/android/server/policy/PhoneWindowManager.java
@@ -152,6 +152,9 @@ import com.android.internal.os.DeviceKeyHandler;
 import com.android.internal.policy.PhoneWindow;
 import com.android.internal.policy.IShortcutService;
 import com.android.internal.statusbar.IStatusBarService;
+import com.android.internal.utils.du.DUActionUtils;
+import com.android.internal.utils.du.ActionHandler;
+import com.android.internal.utils.du.DUSystemReceiver;
 import com.android.internal.util.ScreenShapeHelper;
 import com.android.internal.util.omni.DeviceUtils;
 import com.android.internal.util.omni.TaskUtils;
@@ -598,6 +601,9 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     boolean mForcingShowNavBar;
     int mForcingShowNavBarLayer;
 
+    // User defined bar visibility, regardless of factory configuration
+    boolean mNavbarVisible = false;
+
     // States of keyguard dismiss.
     private static final int DISMISS_KEYGUARD_NONE = 0; // Keyguard not being dismissed.
     private static final int DISMISS_KEYGUARD_START = 1; // Keyguard needs to be dismissed.
@@ -879,6 +885,25 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
     }
 
+    private DUSystemReceiver mDUReceiver = new DUSystemReceiver() {
+        @Override
+        protected void onSecureReceive(Context context, Intent intent) {
+            String action = intent.getAction();
+            if (action == null)
+                return;
+            if (ActionHandler.INTENT_SHOW_POWER_MENU.equals(action)) {
+                mHandler.removeMessages(MSG_DISPATCH_SHOW_GLOBAL_ACTIONS);
+                mHandler.sendEmptyMessage(MSG_DISPATCH_SHOW_GLOBAL_ACTIONS);
+            } else if (ActionHandler.INTENT_SCREENSHOT.equals(action)) {
+                mHandler.removeCallbacks(mScreenshotRunnable);
+                mHandler.post(mScreenshotRunnable);
+            } else if (ActionHandler.INTENT_TOGGLE_SCREENRECORD.equals(action)) {
+                mHandler.removeCallbacks(mScreenrecordRunnable);
+                mHandler.post(mScreenrecordRunnable);
+            }
+        }
+    };
+
     private UEventObserver mHDMIObserver = new UEventObserver() {
         @Override
         public void onUEvent(UEventObserver.UEvent event) {
@@ -955,6 +980,17 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                     Settings.System.ACCELEROMETER_ROTATION_ANGLES), false, this,
                     UserHandle.USER_ALL);
 
+                    Settings.Secure.NAVIGATION_BAR_VISIBLE), false, this,
+                    UserHandle.USER_ALL);
+            resolver.registerContentObserver(Settings.Secure.getUriFor(
+                    Settings.Secure.NAVIGATION_BAR_HEIGHT), false, this,
+                    UserHandle.USER_ALL);
+            resolver.registerContentObserver(Settings.Secure.getUriFor(
+                    Settings.Secure.NAVIGATION_BAR_HEIGHT_LANDSCAPE), false, this,
+                    UserHandle.USER_ALL);
+            resolver.registerContentObserver(Settings.Secure.getUriFor(
+                    Settings.Secure.NAVIGATION_BAR_WIDTH), false, this,
+                    UserHandle.USER_ALL);
             updateSettings();
         }
 
@@ -1850,6 +1886,13 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         filter = new IntentFilter(Intent.ACTION_USER_SWITCHED);
         context.registerReceiver(mMultiuserReceiver, filter);
 
+        // DU action handler
+        filter = new IntentFilter();
+        filter.addAction(ActionHandler.INTENT_SHOW_POWER_MENU);
+        filter.addAction(ActionHandler.INTENT_SCREENSHOT);
+        filter.addAction(ActionHandler.INTENT_TOGGLE_SCREENRECORD);
+        context.registerReceiver(mDUReceiver, filter);
+
         // monitor for system gestures
         mSystemGestures = new SystemGesturesPointerEventListener(context,
                 new SystemGesturesPointerEventListener.Callbacks() {
@@ -1985,6 +2028,10 @@ public class PhoneWindowManager implements WindowManagerPolicy {
      * eg. Disable long press on home goes to recents on sw600dp.
      */
     private void readConfigurationDependentBehaviors() {
+        final boolean hasMenu = (activeHardwareKeys & KEY_MASK_MENU) != 0;
+        final boolean hasAssist = (activeHardwareKeys & KEY_MASK_ASSIST) != 0;
+        final boolean hasAppSwitch = (activeHardwareKeys & KEY_MASK_APP_SWITCH) != 0;
+
         final Resources res = mContext.getResources();
 
         mLongPressOnHomeBehavior = res.getInteger(
@@ -2054,6 +2101,8 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             }
         }
 
+        updateNavigationBarSize();
+
         // SystemUI (status bar) layout policy
         int shortSizeDp = shortSize * DisplayMetrics.DENSITY_DEFAULT / density;
         int longSizeDp = longSize * DisplayMetrics.DENSITY_DEFAULT / density;
@@ -2140,6 +2189,18 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             }
 
             mHasNavigationBar = DeviceUtils.deviceSupportNavigationBar(mContext);
+                    Settings.Secure.NAVIGATION_BAR_VISIBLE,
+                    DUActionUtils.hasNavbarByDefault(mContext) ? 1 : 0,
+                    UserHandle.USER_CURRENT) == 1;
+            if (doShowNavbar != mNavbarVisible) {
+                mNavbarVisible = doShowNavbar;
+                if (mCMHardware.isSupported(CMHardwareManager.FEATURE_KEY_DISABLE)) {
+                    mCMHardware.set(CMHardwareManager.FEATURE_KEY_DISABLE, mNavbarVisible);
+                }
+            }
+
+            updateNavigationBarSize();
+
 
             // Configure rotation lock.
             int userRotation = Settings.System.getIntForUser(resolver,
@@ -2221,6 +2282,57 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
     }
 
+    private void updateNavigationBarSize() {
+        final Resources res = mContext.getResources();
+        int navbarHeightDef = res.getDimensionPixelSize(com.android.internal.R.dimen.navigation_bar_height);
+        int navbarHeightScale = Settings.Secure.getIntForUser(mContext.getContentResolver(),
+                Settings.Secure.NAVIGATION_BAR_HEIGHT, 100, UserHandle.USER_CURRENT);
+        int navbarHeightVal = getScaledNavbarSize(navbarHeightScale, navbarHeightDef);
+        mNavigationBarHeightForRotationDefault[mPortraitRotation] =
+        mNavigationBarHeightForRotationDefault[mUpsideDownRotation] = navbarHeightVal;
+
+        int navbarHeightLandDef = res.getDimensionPixelSize(com.android.internal.R.dimen.navigation_bar_height_landscape);
+        int navbarHeightLandScale = Settings.Secure.getIntForUser(mContext.getContentResolver(),
+                Settings.Secure.NAVIGATION_BAR_HEIGHT_LANDSCAPE, 100, UserHandle.USER_CURRENT);
+        int navbarHeightLandVal = getScaledNavbarSize(navbarHeightLandScale, navbarHeightLandDef);
+        mNavigationBarHeightForRotationDefault[mLandscapeRotation] =
+        mNavigationBarHeightForRotationDefault[mSeascapeRotation] = navbarHeightLandVal;
+
+        // Width of the navigation bar when presented vertically along one
+        // side
+        int navbarWidthDef = res.getDimensionPixelSize(com.android.internal.R.dimen.navigation_bar_width);
+        int navbarWidthScale = Settings.Secure.getIntForUser(mContext.getContentResolver(),
+                Settings.Secure.NAVIGATION_BAR_WIDTH, 100, UserHandle.USER_CURRENT);
+        int navbarWidthVal = getScaledNavbarSize(navbarWidthScale, navbarWidthDef);
+        mNavigationBarWidthForRotationDefault[mPortraitRotation] =
+        mNavigationBarWidthForRotationDefault[mUpsideDownRotation] =
+        mNavigationBarWidthForRotationDefault[mLandscapeRotation] =
+        mNavigationBarWidthForRotationDefault[mSeascapeRotation] = navbarWidthVal;
+
+        if (ALTERNATE_CAR_MODE_NAV_SIZE) {
+            // Height of the navigation bar when presented horizontally at bottom
+            mNavigationBarHeightForRotationInCarMode[mPortraitRotation] =
+            mNavigationBarHeightForRotationInCarMode[mUpsideDownRotation] =
+                    res.getDimensionPixelSize(
+                            com.android.internal.R.dimen.navigation_bar_height_car_mode);
+            mNavigationBarHeightForRotationInCarMode[mLandscapeRotation] =
+            mNavigationBarHeightForRotationInCarMode[mSeascapeRotation] = res.getDimensionPixelSize(
+                    com.android.internal.R.dimen.navigation_bar_height_landscape_car_mode);
+
+            // Width of the navigation bar when presented vertically along one side
+            mNavigationBarWidthForRotationInCarMode[mPortraitRotation] =
+            mNavigationBarWidthForRotationInCarMode[mUpsideDownRotation] =
+            mNavigationBarWidthForRotationInCarMode[mLandscapeRotation] =
+            mNavigationBarWidthForRotationInCarMode[mSeascapeRotation] =
+                    res.getDimensionPixelSize(
+                            com.android.internal.R.dimen.navigation_bar_width_car_mode);
+        }
+    }
+
+    private int getScaledNavbarSize(int percentage, int defaultDimen) {
+        return Math.round(defaultDimen * (percentage * 0.01f));
+    }
+
     private void updateWakeGestureListenerLp() {
         if (shouldEnableWakeGestureLp()) {
             mWakeGestureListener.requestWakeUpTrigger();
@@ -2545,39 +2657,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         mStatusBarHeight =
                 res.getDimensionPixelSize(com.android.internal.R.dimen.status_bar_height);
 
-        // Height of the navigation bar when presented horizontally at bottom
-        mNavigationBarHeightForRotationDefault[mPortraitRotation] =
-        mNavigationBarHeightForRotationDefault[mUpsideDownRotation] =
-                res.getDimensionPixelSize(com.android.internal.R.dimen.navigation_bar_height);
-        mNavigationBarHeightForRotationDefault[mLandscapeRotation] =
-        mNavigationBarHeightForRotationDefault[mSeascapeRotation] = res.getDimensionPixelSize(
-                com.android.internal.R.dimen.navigation_bar_height_landscape);
-
-        // Width of the navigation bar when presented vertically along one side
-        mNavigationBarWidthForRotationDefault[mPortraitRotation] =
-        mNavigationBarWidthForRotationDefault[mUpsideDownRotation] =
-        mNavigationBarWidthForRotationDefault[mLandscapeRotation] =
-        mNavigationBarWidthForRotationDefault[mSeascapeRotation] =
-                res.getDimensionPixelSize(com.android.internal.R.dimen.navigation_bar_width);
-
-        if (ALTERNATE_CAR_MODE_NAV_SIZE) {
-            // Height of the navigation bar when presented horizontally at bottom
-            mNavigationBarHeightForRotationInCarMode[mPortraitRotation] =
-            mNavigationBarHeightForRotationInCarMode[mUpsideDownRotation] =
-                    res.getDimensionPixelSize(
-                            com.android.internal.R.dimen.navigation_bar_height_car_mode);
-            mNavigationBarHeightForRotationInCarMode[mLandscapeRotation] =
-            mNavigationBarHeightForRotationInCarMode[mSeascapeRotation] = res.getDimensionPixelSize(
-                    com.android.internal.R.dimen.navigation_bar_height_landscape_car_mode);
-
-            // Width of the navigation bar when presented vertically along one side
-            mNavigationBarWidthForRotationInCarMode[mPortraitRotation] =
-            mNavigationBarWidthForRotationInCarMode[mUpsideDownRotation] =
-            mNavigationBarWidthForRotationInCarMode[mLandscapeRotation] =
-            mNavigationBarWidthForRotationInCarMode[mSeascapeRotation] =
-                    res.getDimensionPixelSize(
-                            com.android.internal.R.dimen.navigation_bar_width_car_mode);
-        }
+        updateNavigationBarSize();
     }
 
     /** {@inheritDoc} */
@@ -8309,6 +8389,11 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     // Navigation bar visibility is dynamically configured in settings now
     @Override
     public boolean hasNavigationBar() {
+        return mNavbarVisible;
+    }
+
+    @Override
+    public boolean needsNavigationBar() {
         return mHasNavigationBar;
     }
 
diff --git a/services/core/java/com/android/server/power/PowerManagerService.java b/services/core/java/com/android/server/power/PowerManagerService.java
index 2b03bd146a6..635bb897939 100644
--- a/services/core/java/com/android/server/power/PowerManagerService.java
+++ b/services/core/java/com/android/server/power/PowerManagerService.java
@@ -849,6 +849,7 @@ public final class PowerManagerService extends SystemService
         }
 
         updateButtonLightSettings();
+                Settings.Secure.NAVIGATION_BAR_VISIBLE, 0, UserHandle.USER_CURRENT) == 1;
         mDirty |= DIRTY_SETTINGS;
     }
 
diff --git a/services/core/java/com/android/server/statusbar/StatusBarManagerService.java b/services/core/java/com/android/server/statusbar/StatusBarManagerService.java
index 552803f4765..ca6d2149dd1 100644
--- a/services/core/java/com/android/server/statusbar/StatusBarManagerService.java
+++ b/services/core/java/com/android/server/statusbar/StatusBarManagerService.java
@@ -384,6 +384,83 @@ public class StatusBarManagerService extends IStatusBarService.Stub {
         }
     }
 
+    @Override
+    public void toggleRecentApps() {
+        enforceStatusBarService();
+
+        if (mBar != null) {
+            try {
+                mBar.toggleRecentApps();
+            } catch (RemoteException ex) {
+            }
+        }
+    }
+
+    @Override
+    public void toggleSplitScreen() {
+        enforceStatusBarService();
+
+        if (mBar != null) {
+            try {
+                mBar.toggleSplitScreen();
+            } catch (RemoteException ex) {
+            }
+        }
+    }
+
+    @Override
+    public void preloadRecentApps() {
+        enforceStatusBarService();
+
+        if (mBar != null) {
+            try {
+                mBar.preloadRecentApps();
+            } catch (RemoteException ex) {
+            }
+        }
+    }
+
+    @Override
+    public void cancelPreloadRecentApps() {
+        enforceStatusBarService();
+
+        if (mBar != null) {
+            try {
+                mBar.cancelPreloadRecentApps();
+            } catch (RemoteException ex) {
+            }
+        }
+    }
+
+    @Override
+    public void startAssist(Bundle args) {
+        enforceStatusBarService();
+
+        if (mBar != null) {
+            try {
+                mBar.startAssist(args);
+            } catch (RemoteException e) {
+            }
+        }
+    }
+
+    /**
+     * Let systemui know screen pinning state change. This is independent of the
+     * showScreenPinningRequest() call as it does not reflect state
+     *
+     * @hide
+     */
+    @Override
+    public void screenPinningStateChanged(boolean enabled) {
+        enforceStatusBar();
+        if (mBar != null) {
+            try {
+                mBar.screenPinningStateChanged(enabled);
+            } catch (RemoteException ex) {
+            }
+        }
+    }
+
     public void addTile(ComponentName component) {
         enforceStatusBarOrShell();
 
diff --git a/services/core/java/com/android/server/wm/WindowManagerService.java b/services/core/java/com/android/server/wm/WindowManagerService.java
index bcbfa30d1cc..8e1f728c51c 100644
--- a/services/core/java/com/android/server/wm/WindowManagerService.java
+++ b/services/core/java/com/android/server/wm/WindowManagerService.java
@@ -10452,6 +10452,11 @@ public class WindowManagerService extends IWindowManager.Stub
     }
 
     @Override
+    public boolean needsNavigationBar() {
+        return mPolicy.needsNavigationBar();
+    }
+
+    @Override
     public boolean hasNavigationBar() {
         return mPolicy.hasNavigationBar();
     }
-- 
2.12.0

