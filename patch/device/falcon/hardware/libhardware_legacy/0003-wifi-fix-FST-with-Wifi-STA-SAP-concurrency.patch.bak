From 3aaae478fc9a8cc46c1432e7be28480d5b16a3d3 Mon Sep 17 00:00:00 2001
From: sub77 <darfpunk@gmx.de>
Date: Wed, 21 Dec 2016 07:15:47 +0000
Subject: [PATCH 3/3] wifi: fix FST with Wifi STA+SAP concurrency

Wifi STA+SAP concurrency feature was recently introduced and revealed two
FST bugs.

First bug is when FST enabled, wifi_load_driver is expected to load both
wlan and wigig (fst) drivers. If both drivers already loaded,
wifi_load_driver returns immediately with success.

With above implementation, if one of the drivers is loaded but the other
one is not, wifi_load_driver proceed to load both drivers and this
of-course fail.

To fix this, is_wifi_driver_loaded() only check the status of wlan driver.
wifi_load_driver skip loading wlan driver if it is already loaded.

The second bug is that fstman was wrongly started for AP mode in some cases
that it shouldn't have.

To fix this, wifi_start_fstman calls is_fst_softap_enabled() instead of
is_fst_enabled() when starting AP mode.

CRs-Fixed: 1051370
Change-Id: I7b924c79d0aa19083a57f1179ebdfceaf64f5396
Signed-off-by: sub77 <darfpunk@gmx.de>
---
 wifi/wifi.c     | 4 ++--
 wifi/wifi_fst.c | 8 ++++++--
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/wifi/wifi.c b/wifi/wifi.c
index 988b00d..a144c7e 100644
--- a/wifi/wifi.c
+++ b/wifi/wifi.c
@@ -299,7 +299,7 @@ int is_wifi_driver_loaded() {
     while ((fgets(line, sizeof(line), proc)) != NULL) {
         if (strncmp(line, DRIVER_MODULE_TAG, strlen(DRIVER_MODULE_TAG)) == 0) {
             fclose(proc);
-            return is_fst_driver_loaded();
+            return 1;
         }
     }
     fclose(proc);
@@ -364,7 +364,7 @@ int wifi_load_driver()
 #else
 #ifdef WIFI_DRIVER_STATE_CTRL_PARAM
     if (is_wifi_driver_loaded()) {
-        return 0;
+        return wifi_fst_load_driver();
     }
 
     if (wifi_change_driver_state(WIFI_DRIVER_STATE_ON) < 0)
diff --git a/wifi/wifi_fst.c b/wifi/wifi_fst.c
index 4c362f9..286edbd 100644
--- a/wifi/wifi_fst.c
+++ b/wifi/wifi_fst.c
@@ -183,8 +183,10 @@ int wifi_start_fstman(int softap_mode)
     char fstman_init_prop[PROPERTY_VALUE_MAX] = { '\0' };
     int count = 50; /* wait at most 5 seconds for completion */
 
-    if (!is_fst_enabled())
+    if (!is_fst_enabled() ||
+        (softap_mode && !is_fst_softap_enabled())) {
         return 0;
+    }
 
     if (ensure_config_file_exists(FSTMAN_CONFIG_FILE, FSTMAN_CONFIG_TEMPLATE) < 0) {
         ALOGE("Failed to create fstman config file");
@@ -227,8 +229,10 @@ int wifi_stop_fstman(int softap_mode)
     char fstman_init_prop[PROPERTY_VALUE_MAX] = { '\0' };
     int count = 50; /* wait at most 5 seconds for completion */
 
-    if (!is_fst_enabled())
+    if (!is_fst_enabled() ||
+        (softap_mode && !is_fst_softap_enabled())) {
         return 0;
+    }
 
     get_fstman_props(softap_mode, fstman_svc_name, sizeof(fstman_svc_name),
                      fstman_init_prop, sizeof(fstman_init_prop));
-- 
2.1.4

